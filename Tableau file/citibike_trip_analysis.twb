<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.0818.2120                               -->
<workbook original-version='18.1' source-build='2019.2.3 (20192.19.0818.2120)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='201706-citibike-tripdata' inline='true' name='federated.0pd5n020n1p5lm18sgfi01igzamw' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='201706-citibike-tripdata' name='textscan.0kwolq415gjlbk1d80u2t0c8yebm'>
            <connection class='textscan' directory='F:/MSIS Sem 1/Data Models and Decisions/HW 1' filename='201706-citibike-tripdata.csv' password='' port='0' server='' />
          </named-connection>
        </named-connections>
        <relation connection='textscan.0kwolq415gjlbk1d80u2t0c8yebm' name='201706-citibike-tripdata.csv' table='[201706-citibike-tripdata#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='tripduration' ordinal='0' />
            <column datatype='datetime' name='starttime' ordinal='1' />
            <column datatype='datetime' name='stoptime' ordinal='2' />
            <column datatype='integer' name='start station id' ordinal='3' />
            <column datatype='string' name='start station name' ordinal='4' />
            <column datatype='real' name='start station latitude' ordinal='5' />
            <column datatype='real' name='start station longitude' ordinal='6' />
            <column datatype='integer' name='end station id' ordinal='7' />
            <column datatype='string' name='end station name' ordinal='8' />
            <column datatype='real' name='end station latitude' ordinal='9' />
            <column datatype='real' name='end station longitude' ordinal='10' />
            <column datatype='integer' name='bikeid' ordinal='11' />
            <column datatype='string' name='usertype' ordinal='12' />
            <column datatype='integer' name='birth year' ordinal='13' />
            <column datatype='integer' name='gender' ordinal='14' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[201706-citibike-tripdata.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tripduration</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tripduration]</local-name>
            <parent-name>[201706-citibike-tripdata.csv]</parent-name>
            <remote-alias>tripduration</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>starttime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[starttime]</local-name>
            <parent-name>[201706-citibike-tripdata.csv]</parent-name>
            <remote-alias>starttime</remote-alias>
            <ordinal>1</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stoptime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[stoptime]</local-name>
            <parent-name>[201706-citibike-tripdata.csv]</parent-name>
            <remote-alias>stoptime</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[start station id]</local-name>
            <parent-name>[201706-citibike-tripdata.csv]</parent-name>
            <remote-alias>start station id</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[start station name]</local-name>
            <parent-name>[201706-citibike-tripdata.csv]</parent-name>
            <remote-alias>start station name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start station latitude]</local-name>
            <parent-name>[201706-citibike-tripdata.csv]</parent-name>
            <remote-alias>start station latitude</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start station longitude]</local-name>
            <parent-name>[201706-citibike-tripdata.csv]</parent-name>
            <remote-alias>start station longitude</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[end station id]</local-name>
            <parent-name>[201706-citibike-tripdata.csv]</parent-name>
            <remote-alias>end station id</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[end station name]</local-name>
            <parent-name>[201706-citibike-tripdata.csv]</parent-name>
            <remote-alias>end station name</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end station latitude]</local-name>
            <parent-name>[201706-citibike-tripdata.csv]</parent-name>
            <remote-alias>end station latitude</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end station longitude]</local-name>
            <parent-name>[201706-citibike-tripdata.csv]</parent-name>
            <remote-alias>end station longitude</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bikeid</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bikeid]</local-name>
            <parent-name>[201706-citibike-tripdata.csv]</parent-name>
            <remote-alias>bikeid</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>usertype</remote-name>
            <remote-type>129</remote-type>
            <local-name>[usertype]</local-name>
            <parent-name>[201706-citibike-tripdata.csv]</parent-name>
            <remote-alias>usertype</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>birth year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[birth year]</local-name>
            <parent-name>[201706-citibike-tripdata.csv]</parent-name>
            <remote-alias>birth year</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gender</remote-name>
            <remote-type>20</remote-type>
            <local-name>[gender]</local-name>
            <parent-name>[201706-citibike-tripdata.csv]</parent-name>
            <remote-alias>gender</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='None' caption='Tripduration (bin)' datatype='integer' name='[Tripduration (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='2' formula='[tripduration]' peg='0' size='150' />
      </column>
      <column caption='Bikeid' datatype='integer' name='[bikeid]' role='measure' type='ordinal' />
      <column caption='Birth Year' datatype='integer' name='[birth year]' role='dimension' type='quantitative' />
      <column caption='End Station Id' datatype='integer' name='[end station id]' role='measure' type='ordinal' />
      <column aggregation='Avg' caption='End Station Latitude' datatype='real' name='[end station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='End Station Longitude' datatype='real' name='[end station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='End Station Name' datatype='string' name='[end station name]' role='dimension' type='nominal' />
      <column caption='Gender' datatype='integer' name='[gender]' role='measure' type='quantitative' />
      <column caption='Start Station Id' datatype='integer' name='[start station id]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
      <column caption='Starttime' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
      <column caption='Stoptime' datatype='datetime' name='[stoptime]' role='dimension' type='ordinal' />
      <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
      <column caption='Usertype' datatype='string' name='[usertype]' role='dimension' type='nominal' />
      <column-instance column='[Tripduration (bin)]' derivation='None' name='[none:Tripduration (bin):ok]' pivot='key' type='ordinal' />
      <column-instance column='[start station id]' derivation='None' name='[none:start station id:qk]' pivot='key' type='quantitative' />
      <column-instance column='[start station latitude]' derivation='None' name='[none:start station latitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[start station longitude]' derivation='None' name='[none:start station longitude:qk]' pivot='key' type='quantitative' />
      <group hidden='true' name='[Inclusions (Start Station Id,Start Station Latitude,Start Station Longitude)]' name-style='unqualified' user:auto-column='include'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:start station id:qk]' />
          <groupfilter function='level-members' level='[none:start station latitude:qk]' />
          <groupfilter function='level-members' level='[none:start station longitude:qk]' />
        </groupfilter>
      </group>
      <group caption='Manhattan Set' name='[Set 1]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='72' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.767272159999997' />
              <groupfilter function='member' level='[start station longitude]' member='-73.993928879999999' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='79' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.719115520000003' />
              <groupfilter function='member' level='[start station longitude]' member='-74.006666609999996' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='82' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.711174159999999' />
              <groupfilter function='member' level='[start station longitude]' member='-74.000165449999997' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='116' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.741776029999997' />
              <groupfilter function='member' level='[start station longitude]' member='-74.001497459999996' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='127' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.731724280000002' />
              <groupfilter function='member' level='[start station longitude]' member='-74.006744359999999' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='128' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.72710258' />
              <groupfilter function='member' level='[start station longitude]' member='-74.002970880000007' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='146' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.716250080000002' />
              <groupfilter function='member' level='[start station longitude]' member='-74.009105899999994' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='150' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.720873599999997' />
              <groupfilter function='member' level='[start station longitude]' member='-73.980857950000001' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='151' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.722103789999998' />
              <groupfilter function='member' level='[start station longitude]' member='-73.997249010000004' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='152' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.71473993' />
              <groupfilter function='member' level='[start station longitude]' member='-74.009106270000004' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='153' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.752062309999999' />
              <groupfilter function='member' level='[start station longitude]' member='-73.981632399999995' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='161' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.729170250000003' />
              <groupfilter function='member' level='[start station longitude]' member='-73.998102309999993' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='164' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.753230979999998' />
              <groupfilter function='member' level='[start station longitude]' member='-73.970325169999995' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='167' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.748900599999999' />
              <groupfilter function='member' level='[start station longitude]' member='-73.976048820000003' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='168' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.739713010000003' />
              <groupfilter function='member' level='[start station longitude]' member='-73.994564049999994' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='173' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.760683270000001' />
              <groupfilter function='member' level='[start station longitude]' member='-73.984527290000003' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='174' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.738176500000002' />
              <groupfilter function='member' level='[start station longitude]' member='-73.977386620000004' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='195' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.709056230000002' />
              <groupfilter function='member' level='[start station longitude]' member='-74.010433820000003' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='212' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.743349350000003' />
              <groupfilter function='member' level='[start station longitude]' member='-74.006817530000006' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='223' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.737815089999998' />
              <groupfilter function='member' level='[start station longitude]' member='-73.999946609999995' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='224' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.711463639999998' />
              <groupfilter function='member' level='[start station longitude]' member='-74.005524269999995' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='228' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.754601100000002' />
              <groupfilter function='member' level='[start station longitude]' member='-73.971878860000004' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='229' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.72743423' />
              <groupfilter function='member' level='[start station longitude]' member='-73.993790250000004' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='236' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.728418599999998' />
              <groupfilter function='member' level='[start station longitude]' member='-73.987139560000003' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='237' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.730473089999997' />
              <groupfilter function='member' level='[start station longitude]' member='-73.986723780000005' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='238' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.736196700000001' />
              <groupfilter function='member' level='[start station longitude]' member='-74.008592070000006' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='247' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.735353979999999' />
              <groupfilter function='member' level='[start station longitude]' member='-74.004830909999995' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='248' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.721853789999997' />
              <groupfilter function='member' level='[start station longitude]' member='-74.007717790000001' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='249' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.718709869999998' />
              <groupfilter function='member' level='[start station longitude]' member='-74.009000900000004' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='251' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.72317958' />
              <groupfilter function='member' level='[start station longitude]' member='-73.994800119999994' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='252' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.732263979999999' />
              <groupfilter function='member' level='[start station longitude]' member='-73.998522050000005' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='253' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.735439339999999' />
              <groupfilter function='member' level='[start station longitude]' member='-73.99453948' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='254' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.73532427' />
              <groupfilter function='member' level='[start station longitude]' member='-73.998004190000003' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='257' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.719392259999999' />
              <groupfilter function='member' level='[start station longitude]' member='-74.002472139999995' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='259' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.701221279999999' />
              <groupfilter function='member' level='[start station longitude]' member='-74.012342180000005' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='260' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.703651819999997' />
              <groupfilter function='member' level='[start station longitude]' member='-74.011677969999994' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='264' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.707064559999999' />
              <groupfilter function='member' level='[start station longitude]' member='-74.007318530000006' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='265' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.722293460000003' />
              <groupfilter function='member' level='[start station longitude]' member='-73.991475350000002' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='266' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.723683610000002' />
              <groupfilter function='member' level='[start station longitude]' member='-73.975748129999999' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='267' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.750977110000001' />
              <groupfilter function='member' level='[start station longitude]' member='-73.987654280000001' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='268' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.719105370000001' />
              <groupfilter function='member' level='[start station longitude]' member='-73.999733370000001' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='276' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.717487519999999' />
              <groupfilter function='member' level='[start station longitude]' member='-74.010455399999998' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='279' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.707872999999999' />
              <groupfilter function='member' level='[start station longitude]' member='-74.001670000000004' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='280' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.73331967' />
              <groupfilter function='member' level='[start station longitude]' member='-73.995101320000003' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='281' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.764397099999996' />
              <groupfilter function='member' level='[start station longitude]' member='-73.973714650000005' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='284' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.739016909999997' />
              <groupfilter function='member' level='[start station longitude]' member='-74.002637609999994' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='285' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.734545670000003' />
              <groupfilter function='member' level='[start station longitude]' member='-73.990741420000006' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='291' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.713126000000003' />
              <groupfilter function='member' level='[start station longitude]' member='-73.984843999999995' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='293' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.730206610000003' />
              <groupfilter function='member' level='[start station longitude]' member='-73.99102628' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='295' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.714066670000001' />
              <groupfilter function='member' level='[start station longitude]' member='-73.992939109999995' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='296' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.71413089' />
              <groupfilter function='member' level='[start station longitude]' member='-73.997046800000007' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='297' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.734231999999999' />
              <groupfilter function='member' level='[start station longitude]' member='-73.986923000000004' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='301' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.722174440000003' />
              <groupfilter function='member' level='[start station longitude]' member='-73.983687790000005' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='302' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.720828339999997' />
              <groupfilter function='member' level='[start station longitude]' member='-73.977931720000001' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='303' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.723627380000003' />
              <groupfilter function='member' level='[start station longitude]' member='-73.999496010000001' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='304' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.704633340000001' />
              <groupfilter function='member' level='[start station longitude]' member='-74.013617060000001' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='305' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.760957560000001' />
              <groupfilter function='member' level='[start station longitude]' member='-73.967244669999999' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='306' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.708235020000004' />
              <groupfilter function='member' level='[start station longitude]' member='-74.005300629999994' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='307' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.714274869999997' />
              <groupfilter function='member' level='[start station longitude]' member='-73.989900250000005' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='308' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.713079159999999' />
              <groupfilter function='member' level='[start station longitude]' member='-73.998511930000006' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='309' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.714978700000003' />
              <groupfilter function='member' level='[start station longitude]' member='-74.013012000000003' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='311' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.717227399999999' />
              <groupfilter function='member' level='[start station longitude]' member='-73.988020840000004' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='312' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.722054999999997' />
              <groupfilter function='member' level='[start station longitude]' member='-73.989110999999994' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='315' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.703553769999999' />
              <groupfilter function='member' level='[start station longitude]' member='-74.006702270000005' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='316' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.709559579999997' />
              <groupfilter function='member' level='[start station longitude]' member='-74.006536089999997' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='317' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.724537339999998' />
              <groupfilter function='member' level='[start station longitude]' member='-73.981854240000004' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='319' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.711066000000002' />
              <groupfilter function='member' level='[start station longitude]' member='-74.009446999999994' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='320' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.717571' />
              <groupfilter function='member' level='[start station longitude]' member='-74.005549000000002' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='325' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.736245269999998' />
              <groupfilter function='member' level='[start station longitude]' member='-73.98473765' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='326' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.72953837' />
              <groupfilter function='member' level='[start station longitude]' member='-73.984267259999996' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='327' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.715337900000002' />
              <groupfilter function='member' level='[start station longitude]' member='-74.016583539999999' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='328' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.724055489999998' />
              <groupfilter function='member' level='[start station longitude]' member='-74.009659650000003' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='330' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.714504509999998' />
              <groupfilter function='member' level='[start station longitude]' member='-74.00562789' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='331' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.711731069999999' />
              <groupfilter function='member' level='[start station longitude]' member='-73.991930429999996' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='332' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.712199060000003' />
              <groupfilter function='member' level='[start station longitude]' member='-73.979481480000004' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='334' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.742387870000002' />
              <groupfilter function='member' level='[start station longitude]' member='-73.99726235' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='335' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.72903917' />
              <groupfilter function='member' level='[start station longitude]' member='-73.994046490000002' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='336' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.730477469999997' />
              <groupfilter function='member' level='[start station longitude]' member='-73.999060650000004' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='337' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.703799199999999' />
              <groupfilter function='member' level='[start station longitude]' member='-74.008386759999993' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='339' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.725806140000003' />
              <groupfilter function='member' level='[start station longitude]' member='-73.974224939999999' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='340' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.712690420000001' />
              <groupfilter function='member' level='[start station longitude]' member='-73.987763229999999' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='341' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.717821430000001' />
              <groupfilter function='member' level='[start station longitude]' member='-73.976289390000005' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='342' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.717399729999997' />
              <groupfilter function='member' level='[start station longitude]' member='-73.980165549999995' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='345' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.736494030000003' />
              <groupfilter function='member' level='[start station longitude]' member='-73.997043739999995' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='346' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.736528890000002' />
              <groupfilter function='member' level='[start station longitude]' member='-74.006180259999994' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='347' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.728845999999997' />
              <groupfilter function='member' level='[start station longitude]' member='-74.008590999999996' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='348' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.724909850000003' />
              <groupfilter function='member' level='[start station longitude]' member='-74.001547020000004' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='349' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.718502110000003' />
              <groupfilter function='member' level='[start station longitude]' member='-73.983298590000004' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='350' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.715595090000001' />
              <groupfilter function='member' level='[start station longitude]' member='-73.987029500000006' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='351' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.705309540000002' />
              <groupfilter function='member' level='[start station longitude]' member='-74.00612572' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='355' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.716021179999998' />
              <groupfilter function='member' level='[start station longitude]' member='-73.999743719999998' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='356' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.71622644' />
              <groupfilter function='member' level='[start station longitude]' member='-73.982612059999994' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='357' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.732617869999999' />
              <groupfilter function='member' level='[start station longitude]' member='-73.991580429999999' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='358' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.73291553' />
              <groupfilter function='member' level='[start station longitude]' member='-74.007113840000002' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='359' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.755102669999999' />
              <groupfilter function='member' level='[start station longitude]' member='-73.974986959999995' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='360' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.707179359999998' />
              <groupfilter function='member' level='[start station longitude]' member='-74.008873080000001' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='361' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.716058660000002' />
              <groupfilter function='member' level='[start station longitude]' member='-73.991907589999997' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='363' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.708346980000002' />
              <groupfilter function='member' level='[start station longitude]' member='-74.01713445' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='368' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.730385990000002' />
              <groupfilter function='member' level='[start station longitude]' member='-74.002149880000005' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='369' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.732241190000003' />
              <groupfilter function='member' level='[start station longitude]' member='-74.000263939999996' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='376' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.708621440000002' />
              <groupfilter function='member' level='[start station longitude]' member='-74.007221560000005' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='377' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.722437970000001' />
              <groupfilter function='member' level='[start station longitude]' member='-74.005664429999996' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='379' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.749155999999999' />
              <groupfilter function='member' level='[start station longitude]' member='-73.991600000000005' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='380' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.734011430000002' />
              <groupfilter function='member' level='[start station longitude]' member='-74.00293877' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='382' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.734926950000002' />
              <groupfilter function='member' level='[start station longitude]' member='-73.992005090000006' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='383' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.735238000000003' />
              <groupfilter function='member' level='[start station longitude]' member='-74.000270999999998' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='385' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.757973219999997' />
              <groupfilter function='member' level='[start station longitude]' member='-73.966033080000003' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='386' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.714948069999998' />
              <groupfilter function='member' level='[start station longitude]' member='-74.002344820000005' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='387' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.71273266' />
              <groupfilter function='member' level='[start station longitude]' member='-74.004607300000004' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='388' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.749717750000002' />
              <groupfilter function='member' level='[start station longitude]' member='-74.002950350000006' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='393' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.722992079999997' />
              <groupfilter function='member' level='[start station longitude]' member='-73.979954660000004' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='394' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.725213109999999' />
              <groupfilter function='member' level='[start station longitude]' member='-73.977687520000003' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='400' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.719260810000002' />
              <groupfilter function='member' level='[start station longitude]' member='-73.981780240000006' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='401' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.720195760000003' />
              <groupfilter function='member' level='[start station longitude]' member='-73.989978249999993' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='402' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.740343199999998' />
              <groupfilter function='member' level='[start station longitude]' member='-73.989551090000006' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='403' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.725028760000001' />
              <groupfilter function='member' level='[start station longitude]' member='-73.990696560000004' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='405' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.739322999999999' />
              <groupfilter function='member' level='[start station longitude]' member='-74.008118999999994' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='408' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.710762279999997' />
              <groupfilter function='member' level='[start station longitude]' member='-73.994003980000002' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='410' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.720664419999999' />
              <groupfilter function='member' level='[start station longitude]' member='-73.985179770000002' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='411' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.722280869999999' />
              <groupfilter function='member' level='[start station longitude]' member='-73.976687089999999' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='412' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.715815499999998' />
              <groupfilter function='member' level='[start station longitude]' member='-73.994223660000003' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='415' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.704717700000003' />
              <groupfilter function='member' level='[start station longitude]' member='-74.009260269999999' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='417' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.712912240000001' />
              <groupfilter function='member' level='[start station longitude]' member='-74.010202340000006' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='422' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.770513000000001' />
              <groupfilter function='member' level='[start station longitude]' member='-73.988038000000003' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='423' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.765849410000001' />
              <groupfilter function='member' level='[start station longitude]' member='-73.986905059999998' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='426' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.71754834' />
              <groupfilter function='member' level='[start station longitude]' member='-74.013220689999997' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='427' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.701906999999999' />
              <groupfilter function='member' level='[start station longitude]' member='-74.013942' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='428' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.724677210000003' />
              <groupfilter function='member' level='[start station longitude]' member='-73.987834129999996' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='432' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.72621788' />
              <groupfilter function='member' level='[start station longitude]' member='-73.983798550000003' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='433' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.729553609999996' />
              <groupfilter function='member' level='[start station longitude]' member='-73.98057249' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='434' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.743174490000001' />
              <groupfilter function='member' level='[start station longitude]' member='-74.003664430000001' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='435' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.741739690000003' />
              <groupfilter function='member' level='[start station longitude]' member='-73.994155559999996' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='438' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.727791260000004' />
              <groupfilter function='member' level='[start station longitude]' member='-73.985649449999997' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='439' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.726280699999997' />
              <groupfilter function='member' level='[start station longitude]' member='-73.989780409999995' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='440' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.752554340000003' />
              <groupfilter function='member' level='[start station longitude]' member='-73.972826249999997' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='441' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.756014' />
              <groupfilter function='member' level='[start station longitude]' member='-73.967416' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='442' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.746647000000003' />
              <groupfilter function='member' level='[start station longitude]' member='-73.993915000000001' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='444' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.742354300000002' />
              <groupfilter function='member' level='[start station longitude]' member='-73.989150760000001' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='445' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.727407939999999' />
              <groupfilter function='member' level='[start station longitude]' member='-73.981420060000005' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='446' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.744876339999998' />
              <groupfilter function='member' level='[start station longitude]' member='-73.995298849999998' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='447' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.76370739' />
              <groupfilter function='member' level='[start station longitude]' member='-73.985161500000004' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='448' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.756603589999997' />
              <groupfilter function='member' level='[start station longitude]' member='-73.997900900000005' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='449' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.764618370000001' />
              <groupfilter function='member' level='[start station longitude]' member='-73.987894729999994' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='450' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.76227205' />
              <groupfilter function='member' level='[start station longitude]' member='-73.987882049999996' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='453' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.744751479999998' />
              <groupfilter function='member' level='[start station longitude]' member='-73.999153620000001' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='454' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.754557310000003' />
              <groupfilter function='member' level='[start station longitude]' member='-73.965929759999995' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='455' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.750019860000002' />
              <groupfilter function='member' level='[start station longitude]' member='-73.969053009999996' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='456' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.759710800000001' />
              <groupfilter function='member' level='[start station longitude]' member='-73.974023110000005' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='457' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.766953170000001' />
              <groupfilter function='member' level='[start station longitude]' member='-73.981693329999999' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='458' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.751396' />
              <groupfilter function='member' level='[start station longitude]' member='-74.005225999999993' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='459' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.746744999999997' />
              <groupfilter function='member' level='[start station longitude]' member='-74.007756000000001' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='461' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.735876779999998' />
              <groupfilter function='member' level='[start station longitude]' member='-73.982050270000002' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='462' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.746919589999997' />
              <groupfilter function='member' level='[start station longitude]' member='-74.004518869999998' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='465' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.75513557' />
              <groupfilter function='member' level='[start station longitude]' member='-73.986580320000002' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='466' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.743954109999997' />
              <groupfilter function='member' level='[start station longitude]' member='-73.99144871' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='468' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.765265399999997' />
              <groupfilter function='member' level='[start station longitude]' member='-73.981923379999998' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='469' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.763440580000001' />
              <groupfilter function='member' level='[start station longitude]' member='-73.982681290000002' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='470' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.743453350000003' />
              <groupfilter function='member' level='[start station longitude]' member='-74.000040310000003' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='472' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.745712099999999' />
              <groupfilter function='member' level='[start station longitude]' member='-73.981948290000005' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='473' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.721100630000002' />
              <groupfilter function='member' level='[start station longitude]' member='-73.9919254' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='474' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.745167700000003' />
              <groupfilter function='member' level='[start station longitude]' member='-73.986830769999997' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='476' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.743943139999999' />
              <groupfilter function='member' level='[start station longitude]' member='-73.979660690000003' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='477' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.756405479999998' />
              <groupfilter function='member' level='[start station longitude]' member='-73.990026200000003' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='478' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.760300960000002' />
              <groupfilter function='member' level='[start station longitude]' member='-73.99884222' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='479' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.760192519999997' />
              <groupfilter function='member' level='[start station longitude]' member='-73.991255100000004' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='480' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.766696709999998' />
              <groupfilter function='member' level='[start station longitude]' member='-73.990617279999995' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='482' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.739355420000003' />
              <groupfilter function='member' level='[start station longitude]' member='-73.999317829999995' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='483' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.732232719999999' />
              <groupfilter function='member' level='[start station longitude]' member='-73.988899570000001' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='484' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.75500254' />
              <groupfilter function='member' level='[start station longitude]' member='-73.980144370000005' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='485' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.75038009' />
              <groupfilter function='member' level='[start station longitude]' member='-73.983389880000004' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='486' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.746200899999998' />
              <groupfilter function='member' level='[start station longitude]' member='-73.988557229999998' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='487' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.73314259' />
              <groupfilter function='member' level='[start station longitude]' member='-73.975738809999996' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='488' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.756458240000001' />
              <groupfilter function='member' level='[start station longitude]' member='-73.993722219999995' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='490' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.751550999999999' />
              <groupfilter function='member' level='[start station longitude]' member='-73.993933999999996' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='491' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.740963739999998' />
              <groupfilter function='member' level='[start station longitude]' member='-73.986022129999995' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='492' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.750199950000003' />
              <groupfilter function='member' level='[start station longitude]' member='-73.990930849999998' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='494' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.747348250000002' />
              <groupfilter function='member' level='[start station longitude]' member='-73.997235509999996' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='495' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.762698819999997' />
              <groupfilter function='member' level='[start station longitude]' member='-73.993012219999997' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='496' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.737261859999997' />
              <groupfilter function='member' level='[start station longitude]' member='-73.992389669999994' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='497' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.737049839999997' />
              <groupfilter function='member' level='[start station longitude]' member='-73.990092959999998' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='498' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.748548620000001' />
              <groupfilter function='member' level='[start station longitude]' member='-73.98808416' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='499' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.769155050000002' />
              <groupfilter function='member' level='[start station longitude]' member='-73.981918410000006' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='500' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.762288259999998' />
              <groupfilter function='member' level='[start station longitude]' member='-73.983361830000007' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='501' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.744219000000001' />
              <groupfilter function='member' level='[start station longitude]' member='-73.971212140000006' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='502' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.714215000000003' />
              <groupfilter function='member' level='[start station longitude]' member='-73.981346000000002' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='503' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.738274279999999' />
              <groupfilter function='member' level='[start station longitude]' member='-73.987519680000005' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='504' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.732218529999997' />
              <groupfilter function='member' level='[start station longitude]' member='-73.981655570000001' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='505' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.749012710000002' />
              <groupfilter function='member' level='[start station longitude]' member='-73.988483950000003' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='507' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.73912601' />
              <groupfilter function='member' level='[start station longitude]' member='-73.979737760000006' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='508' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.763413790000001' />
              <groupfilter function='member' level='[start station longitude]' member='-73.996674440000007' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='509' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.745497299999997' />
              <groupfilter function='member' level='[start station longitude]' member='-74.001971389999994' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='511' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.729386849999997' />
              <groupfilter function='member' level='[start station longitude]' member='-73.977724289999998' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='513' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.768253999999999' />
              <groupfilter function='member' level='[start station longitude]' member='-73.988639000000006' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='514' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.76087502' />
              <groupfilter function='member' level='[start station longitude]' member='-74.002776679999997' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='515' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.760094369999997' />
              <groupfilter function='member' level='[start station longitude]' member='-73.994618430000003' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='516' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.752068620000003' />
              <groupfilter function='member' level='[start station longitude]' member='-73.96784384' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='517' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.751581000000002' />
              <groupfilter function='member' level='[start station longitude]' member='-73.977909999999994' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='518' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.747803730000001' />
              <groupfilter function='member' level='[start station longitude]' member='-73.973441899999997' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='519' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.751873000000003' />
              <groupfilter function='member' level='[start station longitude]' member='-73.977705999999998' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='520' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.759922619999998' />
              <groupfilter function='member' level='[start station longitude]' member='-73.976485159999996' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='522' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.757147580000002' />
              <groupfilter function='member' level='[start station longitude]' member='-73.972078359999998' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='523' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.75466591' />
              <groupfilter function='member' level='[start station longitude]' member='-73.991381520000004' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='524' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.755273070000001' />
              <groupfilter function='member' level='[start station longitude]' member='-73.983169360000005' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='525' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.755941589999999' />
              <groupfilter function='member' level='[start station longitude]' member='-74.002116299999997' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='526' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.747659470000002' />
              <groupfilter function='member' level='[start station longitude]' member='-73.984907070000006' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='527' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.744022999999999' />
              <groupfilter function='member' level='[start station longitude]' member='-73.976056' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='528' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.742909019999999' />
              <groupfilter function='member' level='[start station longitude]' member='-73.97706058' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='529' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.7575699' />
              <groupfilter function='member' level='[start station longitude]' member='-73.990985069999994' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='530' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.771521999999997' />
              <groupfilter function='member' level='[start station longitude]' member='-73.990540999999993' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='531' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.718939040000002' />
              <groupfilter function='member' level='[start station longitude]' member='-73.992662879999997' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='534' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.702550649999999' />
              <groupfilter function='member' level='[start station longitude]' member='-74.012723399999999' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='536' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.741443869999998' />
              <groupfilter function='member' level='[start station longitude]' member='-73.975360820000006' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='537' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.740258779999998' />
              <groupfilter function='member' level='[start station longitude]' member='-73.984092140000001' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='540' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.743115549999999' />
              <groupfilter function='member' level='[start station longitude]' member='-73.982153530000005' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='545' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.736502000000002' />
              <groupfilter function='member' level='[start station longitude]' member='-73.978094720000001' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='546' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.744449209999999' />
              <groupfilter function='member' level='[start station longitude]' member='-73.983035290000004' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='2003' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.733812190000002' />
              <groupfilter function='member' level='[start station longitude]' member='-73.980544210000005' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='2006' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.765909360000002' />
              <groupfilter function='member' level='[start station longitude]' member='-73.976341509999997' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='2008' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.705692540000001' />
              <groupfilter function='member' level='[start station longitude]' member='-74.016776849999999' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='2009' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.711174440000001' />
              <groupfilter function='member' level='[start station longitude]' member='-73.996826189999993' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='2010' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.721654809999997' />
              <groupfilter function='member' level='[start station longitude]' member='-74.002347369999995' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='2012' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.739445000000003' />
              <groupfilter function='member' level='[start station longitude]' member='-73.976805999999996' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='2021' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.759291240000003' />
              <groupfilter function='member' level='[start station longitude]' member='-73.988596509999994' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='2022' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.759107' />
              <groupfilter function='member' level='[start station longitude]' member='-73.959222999999994' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='2023' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.759680850000002' />
              <groupfilter function='member' level='[start station longitude]' member='-73.970313660000002' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3002' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.711511999999999' />
              <groupfilter function='member' level='[start station longitude]' member='-74.015755999999996' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3131' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.767128399999997' />
              <groupfilter function='member' level='[start station longitude]' member='-73.962246179999994' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3132' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.76350532' />
              <groupfilter function='member' level='[start station longitude]' member='-73.971092429999999' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3134' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.763125840000001' />
              <groupfilter function='member' level='[start station longitude]' member='-73.965268949999995' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3135' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.771129270000003' />
              <groupfilter function='member' level='[start station longitude]' member='-73.957722970000006' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3136' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.766368' />
              <groupfilter function='member' level='[start station longitude]' member='-73.971518000000003' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3137' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.772828169999997' />
              <groupfilter function='member' level='[start station longitude]' member='-73.966852759999995' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3139' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.771182879999998' />
              <groupfilter function='member' level='[start station longitude]' member='-73.964094220000007' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3140' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.771404259999997' />
              <groupfilter function='member' level='[start station longitude]' member='-73.9535166' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3141' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.765005250000002' />
              <groupfilter function='member' level='[start station longitude]' member='-73.95818491' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3142' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.761227400000003' />
              <groupfilter function='member' level='[start station longitude]' member='-73.960940219999998' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3143' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.776321420000002' />
              <groupfilter function='member' level='[start station longitude]' member='-73.964273930000004' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3144' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.776777019999997' />
              <groupfilter function='member' level='[start station longitude]' member='-73.959009699999996' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3145' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.778626879999997' />
              <groupfilter function='member' level='[start station longitude]' member='-73.957720730000005' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3146' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.775730340000003' />
              <groupfilter function='member' level='[start station longitude]' member='-73.956752600000002' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3147' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.778012029999999' />
              <groupfilter function='member' level='[start station longitude]' member='-73.954071490000004' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3148' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.775655409999999' />
              <groupfilter function='member' level='[start station longitude]' member='-73.950686149999996' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3150' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.775369050000002' />
              <groupfilter function='member' level='[start station longitude]' member='-73.94803392' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3151' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.772838399999998' />
              <groupfilter function='member' level='[start station longitude]' member='-73.949892329999997' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3152' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.768736869999998' />
              <groupfilter function='member' level='[start station longitude]' member='-73.961199449999995' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3155' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.76440023' />
              <groupfilter function='member' level='[start station longitude]' member='-73.966489769999995' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3156' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.766638139999998' />
              <groupfilter function='member' level='[start station longitude]' member='-73.953482960000002' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3157' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.775186150000003' />
              <groupfilter function='member' level='[start station longitude]' member='-73.944460539999994' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3158' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.771638510000002' />
              <groupfilter function='member' level='[start station longitude]' member='-73.982614280000007' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3159' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.77492513' />
              <groupfilter function='member' level='[start station longitude]' member='-73.982665659999995' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3160' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.77896784' />
              <groupfilter function='member' level='[start station longitude]' member='-73.973747369999998' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3161' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.780183970000003' />
              <groupfilter function='member' level='[start station longitude]' member='-73.977285330000001' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3162' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.783399809999999' />
              <groupfilter function='member' level='[start station longitude]' member='-73.980931330000004' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3163' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.773406600000001' />
              <groupfilter function='member' level='[start station longitude]' member='-73.977825420000002' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3164' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.777057499999998' />
              <groupfilter function='member' level='[start station longitude]' member='-73.978984749999995' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3165' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.77579377' />
              <groupfilter function='member' level='[start station longitude]' member='-73.976205739999997' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3166' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.780577989999998' />
              <groupfilter function='member' level='[start station longitude]' member='-73.985624310000006' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3167' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.779668090000001' />
              <groupfilter function='member' level='[start station longitude]' member='-73.980930450000002' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3168' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.784726749999997' />
              <groupfilter function='member' level='[start station longitude]' member='-73.969617150000005' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3169' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.78720869' />
              <groupfilter function='member' level='[start station longitude]' member='-73.981281269999997' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3170' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.784999790000001' />
              <groupfilter function='member' level='[start station longitude]' member='-73.972834059999997' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3171' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.785246720000004' />
              <groupfilter function='member' level='[start station longitude]' member='-73.976673210000001' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3172' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.778566900000001' />
              <groupfilter function='member' level='[start station longitude]' member='-73.977549609999997' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3173' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.777507030000002' />
              <groupfilter function='member' level='[start station longitude]' member='-73.988885879999998' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3175' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.77748046' />
              <groupfilter function='member' level='[start station longitude]' member='-73.982885940000003' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3176' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.774528349999997' />
              <groupfilter function='member' level='[start station longitude]' member='-73.987537590000002' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3177' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.786794700000002' />
              <groupfilter function='member' level='[start station longitude]' member='-73.977112000000005' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3178' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.78414472' />
              <groupfilter function='member' level='[start station longitude]' member='-73.983624919999997' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3182' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.686931000000001' />
              <groupfilter function='member' level='[start station longitude]' member='-74.016965999999996' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3223' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.75899656' />
              <groupfilter function='member' level='[start station longitude]' member='-73.968653979999999' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3224' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.739973540000001' />
              <groupfilter function='member' level='[start station longitude]' member='-74.005138729999999' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3226' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.78275' />
              <groupfilter function='member' level='[start station longitude]' member='-73.971369999999993' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3231' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.767800800000003' />
              <groupfilter function='member' level='[start station longitude]' member='-73.96592081' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3233' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.757245679999997' />
              <groupfilter function='member' level='[start station longitude]' member='-73.978059139999999' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3235' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.75216528' />
              <groupfilter function='member' level='[start station longitude]' member='-73.979921939999997' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3236' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.758984810000001' />
              <groupfilter function='member' level='[start station longitude]' member='-73.993799690000003' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3238' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.773913899999997' />
              <groupfilter function='member' level='[start station longitude]' member='-73.954395349999999' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3243' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.758923860000003' />
              <groupfilter function='member' level='[start station longitude]' member='-73.962262269999997' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3244' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.731437239999998' />
              <groupfilter function='member' level='[start station longitude]' member='-73.99490342' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3250' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.716909780000002' />
              <groupfilter function='member' level='[start station longitude]' member='-73.983837960000002' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3254' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.692316609999999' />
              <groupfilter function='member' level='[start station longitude]' member='-74.014865760000006' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3255' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.750585350000001' />
              <groupfilter function='member' level='[start station longitude]' member='-73.994684820000003' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3256' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.727714079999998' />
              <groupfilter function='member' level='[start station longitude]' member='-74.011295739999994' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3257' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.773768670000003' />
              <groupfilter function='member' level='[start station longitude]' member='-73.971169889999999' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3258' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.750181560000001' />
              <groupfilter function='member' level='[start station longitude]' member='-74.002184270000001' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3259' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.749370239999998' />
              <groupfilter function='member' level='[start station longitude]' member='-73.999233840000002' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3260' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.727063630000004' />
              <groupfilter function='member' level='[start station longitude]' member='-73.99662137' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3263' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.729236499999999' />
              <groupfilter function='member' level='[start station longitude]' member='-73.990868030000001' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3282' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.783070000000002' />
              <groupfilter function='member' level='[start station longitude]' member='-73.959389999999999' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3283' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.788221300000004' />
              <groupfilter function='member' level='[start station longitude]' member='-73.970415610000003' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3284' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.781410700000002' />
              <groupfilter function='member' level='[start station longitude]' member='-73.95595908' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3285' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.78839' />
              <groupfilter function='member' level='[start station longitude]' member='-73.974699999999999' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3286' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.780628399999998' />
              <groupfilter function='member' level='[start station longitude]' member='-73.952166700000006' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3288' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.778300999999999' />
              <groupfilter function='member' level='[start station longitude]' member='-73.948813400000006' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3289' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.790179479999999' />
              <groupfilter function='member' level='[start station longitude]' member='-73.972889179999996' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3290' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.777945299999999' />
              <groupfilter function='member' level='[start station longitude]' member='-73.946040999999994' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3292' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.785785099999998' />
              <groupfilter function='member' level='[start station longitude]' member='-73.957481000000001' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3293' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.792099999999998' />
              <groupfilter function='member' level='[start station longitude]' member='-73.9739' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3294' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.783501600000001' />
              <groupfilter function='member' level='[start station longitude]' member='-73.955326999999997' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3295' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.791269999999997' />
              <groupfilter function='member' level='[start station longitude]' member='-73.964838999999998' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3301' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.791955700000003' />
              <groupfilter function='member' level='[start station longitude]' member='-73.968086999999997' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3302' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.796934700000001' />
              <groupfilter function='member' level='[start station longitude]' member='-73.964341230000002' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3305' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.7811223' />
              <groupfilter function='member' level='[start station longitude]' member='-73.949655890000003' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3307' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.794165399999997' />
              <groupfilter function='member' level='[start station longitude]' member='-73.974124000000003' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3309' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.785920099999998' />
              <groupfilter function='member' level='[start station longitude]' member='-73.948602940000001' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3312' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.7817212' />
              <groupfilter function='member' level='[start station longitude]' member='-73.945939999999993' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3314' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.7937704' />
              <groupfilter function='member' level='[start station longitude]' member='-73.971888000000007' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3316' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.798993699999997' />
              <groupfilter function='member' level='[start station longitude]' member='-73.966217380000003' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3318' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.7839636' />
              <groupfilter function='member' level='[start station longitude]' member='-73.947167300000004' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3320' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.793393000000002' />
              <groupfilter function='member' level='[start station longitude]' member='-73.963555600000007' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3323' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.798185599999996' />
              <groupfilter function='member' level='[start station longitude]' member='-73.9605909' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3325' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.784903200000002' />
              <groupfilter function='member' level='[start station longitude]' member='-73.950502999999998' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3327' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.787721400000002' />
              <groupfilter function='member' level='[start station longitude]' member='-73.947283310000003' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3328' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.795000000000002' />
              <groupfilter function='member' level='[start station longitude]' member='-73.964500000000001' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3331' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.8013434' />
              <groupfilter function='member' level='[start station longitude]' member='-73.971145739999997' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3336' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.787801000000002' />
              <groupfilter function='member' level='[start station longitude]' member='-73.953558999999998' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3338' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.786258599999996' />
              <groupfilter function='member' level='[start station longitude]' member='-73.945525790000005' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3341' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.795346000000002' />
              <groupfilter function='member' level='[start station longitude]' member='-73.961860000000001' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3343' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.799756799999997' />
              <groupfilter function='member' level='[start station longitude]' member='-73.962112869999999' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3345' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.789485419999998' />
              <groupfilter function='member' level='[start station longitude]' member='-73.952429289999998' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3350' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.797372099999997' />
              <groupfilter function='member' level='[start station longitude]' member='-73.970411920000004' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3351' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.7869946' />
              <groupfilter function='member' level='[start station longitude]' member='-73.941648020000002' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3355' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.768008889999997' />
              <groupfilter function='member' level='[start station longitude]' member='-73.968452810000002' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3356' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.774667100000002' />
              <groupfilter function='member' level='[start station longitude]' member='-73.984705669999997' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3357' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.8008363' />
              <groupfilter function='member' level='[start station longitude]' member='-73.966449249999997' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3359' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.769157200000002' />
              <groupfilter function='member' level='[start station longitude]' member='-73.967034639999994' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3360' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.7829391' />
              <groupfilter function='member' level='[start station longitude]' member='-73.9786517' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3362' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.778131399999999' />
              <groupfilter function='member' level='[start station longitude]' member='-73.960693989999996' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3363' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.790482799999999' />
              <groupfilter function='member' level='[start station longitude]' member='-73.950330679999993' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3366' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.8021174' />
              <groupfilter function='member' level='[start station longitude]' member='-73.968180529999998' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3367' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.792255300000001' />
              <groupfilter function='member' level='[start station longitude]' member='-73.952499329999995' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3369' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.772460680000002' />
              <groupfilter function='member' level='[start station longitude]' member='-73.946820799999998' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3370' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.7727966' />
              <groupfilter function='member' level='[start station longitude]' member='-73.955778010000003' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3372' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.768973799999998' />
              <groupfilter function='member' level='[start station longitude]' member='-73.954822730000004' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3374' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.799484' />
              <groupfilter function='member' level='[start station longitude]' member='-73.955613' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3375' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.7699426' />
              <groupfilter function='member' level='[start station longitude]' member='-73.960607120000006' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3376' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.764718520000002' />
              <groupfilter function='member' level='[start station longitude]' member='-73.962220700000003' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3378' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.773763000000002' />
              <groupfilter function='member' level='[start station longitude]' member='-73.962220880000004' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3379' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.790305099999998' />
              <groupfilter function='member' level='[start station longitude]' member='-73.947557570000001' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3383' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.804212999999997' />
              <groupfilter function='member' level='[start station longitude]' member='-73.966991039999996' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3387' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.793433700000001' />
              <groupfilter function='member' level='[start station longitude]' member='-73.949450029999994' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3390' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.793296679999997' />
              <groupfilter function='member' level='[start station longitude]' member='-73.943208299999995' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3391' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.789252900000001' />
              <groupfilter function='member' level='[start station longitude]' member='-73.939562370000004' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3400' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.796153500000003' />
              <groupfilter function='member' level='[start station longitude]' member='-73.947821450000006' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3424' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.791975999999998' />
              <groupfilter function='member' level='[start station longitude]' member='-73.945993000000001' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3425' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.789210500000003' />
              <groupfilter function='member' level='[start station longitude]' member='-73.943707840000002' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3427' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.724305270000002' />
              <groupfilter function='member' level='[start station longitude]' member='-73.996009830000006' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3428' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.740983' />
              <groupfilter function='member' level='[start station longitude]' member='-74.001701999999995' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3431' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.746524000000001' />
              <groupfilter function='member' level='[start station longitude]' member='-73.977885000000001' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3434' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.790254169999997' />
              <groupfilter function='member' level='[start station longitude]' member='-73.977183400000001' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3435' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.718822000000003' />
              <groupfilter function='member' level='[start station longitude]' member='-73.995959999999997' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3436' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.721319000000001' />
              <groupfilter function='member' level='[start station longitude]' member='-74.010064999999997' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3438' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.77224854' />
              <groupfilter function='member' level='[start station longitude]' member='-73.958421349999995' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3441' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.752957000000002' />
              <groupfilter function='member' level='[start station longitude]' member='-74.00264' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3443' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.761329830000001' />
              <groupfilter function='member' level='[start station longitude]' member='-73.979820009999997' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3445' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.791811719999998' />
              <groupfilter function='member' level='[start station longitude]' member='-73.978602289999998' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3447' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.76703432' />
              <groupfilter function='member' level='[start station longitude]' member='-73.956227299999995' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3457' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.763025939999999' />
              <groupfilter function='member' level='[start station longitude]' member='-73.972095249999995' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3458' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.763093869999999' />
              <groupfilter function='member' level='[start station longitude]' member='-73.978350160000005' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3459' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.757632280000003' />
              <groupfilter function='member' level='[start station longitude]' member='-73.969305750000004' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3461' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.714851510000003' />
              <groupfilter function='member' level='[start station longitude]' member='-74.011223319999999' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3462' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.751183869999998' />
              <groupfilter function='member' level='[start station longitude]' member='-73.971387149999998' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3463' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.735367060000002' />
              <groupfilter function='member' level='[start station longitude]' member='-73.987973929999995' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3464' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.752270940000002' />
              <groupfilter function='member' level='[start station longitude]' member='-73.98770571' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3466' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.756687210000003' />
              <groupfilter function='member' level='[start station longitude]' member='-73.982577320000004' />
            </groupfilter>
          </groupfilter>
          <groupfilter function='crossjoin'>
            <groupfilter function='member' level='[start station id]' member='3468' />
            <groupfilter function='crossjoin'>
              <groupfilter function='member' level='[start station latitude]' member='40.730380099999998' />
              <groupfilter function='member' level='[start station longitude]' member='-73.974750200000003' />
            </groupfilter>
          </groupfilter>
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.393407' group-percentage='0.0747253' measure-ordering='alphabetic' measure-percentage='0.531868' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Tripduration (bin):ok]' palette='orange_10_0' type='palette'>
            <map to='#9e3d22'>
              <bucket>18</bucket>
            </map>
            <map to='#a74222'>
              <bucket>17</bucket>
            </map>
            <map to='#b04723'>
              <bucket>16</bucket>
            </map>
            <map to='#ba4c23'>
              <bucket>15</bucket>
            </map>
            <map to='#c35122'>
              <bucket>14</bucket>
            </map>
            <map to='#cc5622'>
              <bucket>13</bucket>
            </map>
            <map to='#d55b21'>
              <bucket>12</bucket>
            </map>
            <map to='#df6020'>
              <bucket>11</bucket>
            </map>
            <map to='#e66720'>
              <bucket>10</bucket>
            </map>
            <map to='#ed6f20'>
              <bucket>9</bucket>
            </map>
            <map to='#ef7925'>
              <bucket>8</bucket>
            </map>
            <map to='#f2842b'>
              <bucket>7</bucket>
            </map>
            <map to='#f48e32'>
              <bucket>6</bucket>
            </map>
            <map to='#f59939'>
              <bucket>5</bucket>
            </map>
            <map to='#f5a343'>
              <bucket>4</bucket>
            </map>
            <map to='#f6ad51'>
              <bucket>3</bucket>
            </map>
            <map to='#f9b563'>
              <bucket>2</bucket>
            </map>
            <map to='#fcbd74'>
              <bucket>1</bucket>
            </map>
            <map to='#ffc685'>
              <bucket>0</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.0pd5n020n1p5lm18sgfi01igzamw'>
      <datasources>
        <datasource caption='201706-citibike-tripdata' name='federated.0pd5n020n1p5lm18sgfi01igzamw' />
      </datasources>
      <datasource-dependencies datasource='federated.0pd5n020n1p5lm18sgfi01igzamw'>
        <column-instance column='[tripduration]' derivation='None' name='[none:tripduration:qk]' pivot='key' type='quantitative' />
        <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
      </datasource-dependencies>
      <filter class='quantitative' column='[federated.0pd5n020n1p5lm18sgfi01igzamw].[none:tripduration:qk]' included-values='in-range'>
        <min>61</min>
        <max>2700</max>
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='201706-citibike-tripdata' name='federated.0pd5n020n1p5lm18sgfi01igzamw' />
          </datasources>
          <datasource-dependencies datasource='federated.0pd5n020n1p5lm18sgfi01igzamw'>
            <column aggregation='None' caption='Tripduration (bin)' datatype='integer' name='[Tripduration (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='2' formula='[tripduration]' peg='0' size='150' />
            </column>
            <column-instance column='[tripduration]' derivation='Count' name='[cnt:tripduration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Tripduration (bin)]' derivation='None' name='[none:Tripduration (bin):qk]' pivot='key' type='quantitative' />
            <column-instance column='[tripduration]' derivation='None' name='[none:tripduration:qk]' pivot='key' type='quantitative' />
            <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0pd5n020n1p5lm18sgfi01igzamw].[none:tripduration:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#59a14f' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#8cd17d' />
                <format attr='mark-markers-mode' value='auto' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pd5n020n1p5lm18sgfi01igzamw].[cnt:tripduration:qk]</rows>
        <cols>[federated.0pd5n020n1p5lm18sgfi01igzamw].[none:Tripduration (bin):qk]</cols>
        <show-full-range>
          <column>[federated.0pd5n020n1p5lm18sgfi01igzamw].[Tripduration (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{DDA11D36-A613-4CEB-953F-BC8594772893}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='201706-citibike-tripdata' name='federated.0pd5n020n1p5lm18sgfi01igzamw' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0pd5n020n1p5lm18sgfi01igzamw'>
            <column-instance column='[tripduration]' derivation='Avg' name='[avg:tripduration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station id]' derivation='Count' name='[cnt:start station id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station id]' derivation='None' name='[none:start station id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station latitude]' derivation='None' name='[none:start station latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station longitude]' derivation='None' name='[none:start station longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
            <column-instance column='[tripduration]' derivation='None' name='[none:tripduration:qk]' pivot='key' type='quantitative' />
            <column caption='Start Station Id' datatype='integer' name='[start station id]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
            <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0pd5n020n1p5lm18sgfi01igzamw].[none:tripduration:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0pd5n020n1p5lm18sgfi01igzamw].[none:start station longitude:qk]' field-type='quantitative' max='-8211740.994183342' min='-8257771.145361769' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0pd5n020n1p5lm18sgfi01igzamw].[none:start station latitude:qk]' field-type='quantitative' max='4984907.0583037222' min='4959401.4343348397' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0pd5n020n1p5lm18sgfi01igzamw].[cnt:start station id:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.0pd5n020n1p5lm18sgfi01igzamw].[none:start station id:qk]' />
              <lod column='[federated.0pd5n020n1p5lm18sgfi01igzamw].[none:start station name:nk]' />
              <size column='[federated.0pd5n020n1p5lm18sgfi01igzamw].[avg:tripduration:qk]' />
              <color column='[federated.0pd5n020n1p5lm18sgfi01igzamw].[cnt:start station id:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
                <format attr='size' value='0.36182320117950439' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pd5n020n1p5lm18sgfi01igzamw].[none:start station latitude:qk]</rows>
        <cols>[federated.0pd5n020n1p5lm18sgfi01igzamw].[none:start station longitude:qk]</cols>
      </table>
      <simple-id uuid='{5C1B5E88-543B-477D-8B39-B145DB821918}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Manhattan</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='201706-citibike-tripdata' name='federated.0pd5n020n1p5lm18sgfi01igzamw' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0pd5n020n1p5lm18sgfi01igzamw'>
            <column-instance column='[start station name]' derivation='Attribute' name='[attr:start station name:nk]' pivot='key' type='nominal' />
            <column-instance column='[tripduration]' derivation='Avg' name='[avg:tripduration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station id]' derivation='Count' name='[cnt:start station id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station id]' derivation='None' name='[none:start station id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station latitude]' derivation='None' name='[none:start station latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station longitude]' derivation='None' name='[none:start station longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tripduration]' derivation='None' name='[none:tripduration:qk]' pivot='key' type='quantitative' />
            <column caption='Start Station Id' datatype='integer' name='[start station id]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
            <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pd5n020n1p5lm18sgfi01igzamw].[Inclusions (Start Station Id,Start Station Latitude,Start Station Longitude)]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='72' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.767272159999997' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.993928879999999' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='79' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.719115520000003' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.006666609999996' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='82' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.711174159999999' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.000165449999997' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='116' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.741776029999997' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.001497459999996' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='127' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.731724280000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.006744359999999' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='128' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.72710258' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.002970880000007' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='146' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.716250080000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.009105899999994' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='150' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.720873599999997' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.980857950000001' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='151' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.722103789999998' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.997249010000004' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='152' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.71473993' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.009106270000004' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='153' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.752062309999999' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.981632399999995' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='161' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.729170250000003' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.998102309999993' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='164' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.753230979999998' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.970325169999995' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='167' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.748900599999999' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.976048820000003' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='168' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.739713010000003' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.994564049999994' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='173' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.760683270000001' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.984527290000003' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='174' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.738176500000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.977386620000004' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='195' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.709056230000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.010433820000003' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='212' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.743349350000003' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.006817530000006' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='223' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.737815089999998' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.999946609999995' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='224' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.711463639999998' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.005524269999995' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='228' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.754601100000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.971878860000004' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='229' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.72743423' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.993790250000004' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='236' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.728418599999998' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.987139560000003' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='237' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.730473089999997' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.986723780000005' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='238' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.736196700000001' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.008592070000006' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='247' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.735353979999999' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.004830909999995' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='248' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.721853789999997' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.007717790000001' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='249' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.718709869999998' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.009000900000004' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='251' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.72317958' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.994800119999994' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='252' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.732263979999999' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.998522050000005' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='253' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.735439339999999' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.99453948' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='254' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.73532427' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.998004190000003' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='257' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.719392259999999' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.002472139999995' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='259' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.701221279999999' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.012342180000005' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='260' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.703651819999997' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.011677969999994' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='264' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.707064559999999' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.007318530000006' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='265' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.722293460000003' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.991475350000002' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='266' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.723683610000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.975748129999999' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='267' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.750977110000001' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.987654280000001' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='268' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.719105370000001' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.999733370000001' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='276' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.717487519999999' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.010455399999998' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='279' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.707872999999999' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.001670000000004' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='280' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.73331967' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.995101320000003' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='281' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.764397099999996' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.973714650000005' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='284' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.739016909999997' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.002637609999994' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='285' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.734545670000003' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.990741420000006' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='291' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.713126000000003' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.984843999999995' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='293' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.730206610000003' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.99102628' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='295' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.714066670000001' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.992939109999995' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='296' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.71413089' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.997046800000007' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='297' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.734231999999999' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.986923000000004' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='301' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.722174440000003' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.983687790000005' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='302' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.720828339999997' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.977931720000001' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='303' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.723627380000003' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.999496010000001' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='304' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.704633340000001' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.013617060000001' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='305' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.760957560000001' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.967244669999999' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='306' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.708235020000004' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.005300629999994' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='307' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.714274869999997' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.989900250000005' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='308' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.713079159999999' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.998511930000006' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='309' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.714978700000003' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.013012000000003' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='311' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.717227399999999' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.988020840000004' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='312' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.722054999999997' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.989110999999994' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='315' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.703553769999999' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.006702270000005' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='316' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.709559579999997' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.006536089999997' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='317' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.724537339999998' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.981854240000004' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='319' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.711066000000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.009446999999994' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='320' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.717571' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.005549000000002' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='325' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.736245269999998' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.98473765' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='326' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.72953837' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.984267259999996' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='327' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.715337900000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.016583539999999' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='328' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.724055489999998' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.009659650000003' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='330' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.714504509999998' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.00562789' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='331' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.711731069999999' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.991930429999996' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='332' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.712199060000003' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.979481480000004' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='334' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.742387870000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.99726235' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='335' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.72903917' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.994046490000002' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='336' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.730477469999997' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.999060650000004' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='337' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.703799199999999' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.008386759999993' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='339' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.725806140000003' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.974224939999999' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='340' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.712690420000001' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.987763229999999' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='341' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.717821430000001' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.976289390000005' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='342' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.717399729999997' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.980165549999995' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='345' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.736494030000003' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.997043739999995' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='346' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.736528890000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.006180259999994' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='347' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.728845999999997' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.008590999999996' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='348' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.724909850000003' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.001547020000004' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='349' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.718502110000003' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.983298590000004' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='350' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.715595090000001' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.987029500000006' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='351' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.705309540000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.00612572' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='355' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.716021179999998' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.999743719999998' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='356' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.71622644' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.982612059999994' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='357' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.732617869999999' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.991580429999999' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='358' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.73291553' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.007113840000002' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='359' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.755102669999999' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.974986959999995' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='360' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.707179359999998' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.008873080000001' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='361' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.716058660000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.991907589999997' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='363' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.708346980000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.01713445' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='368' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.730385990000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.002149880000005' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='369' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.732241190000003' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.000263939999996' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='376' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.708621440000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.007221560000005' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='377' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.722437970000001' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.005664429999996' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='379' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.749155999999999' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.991600000000005' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='380' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.734011430000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.00293877' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='382' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.734926950000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.992005090000006' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='383' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.735238000000003' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.000270999999998' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='385' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.757973219999997' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.966033080000003' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='386' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.714948069999998' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.002344820000005' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='387' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.71273266' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.004607300000004' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='388' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.749717750000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.002950350000006' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='393' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.722992079999997' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.979954660000004' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='394' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.725213109999999' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.977687520000003' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='400' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.719260810000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.981780240000006' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='401' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.720195760000003' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.989978249999993' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='402' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.740343199999998' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.989551090000006' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='403' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.725028760000001' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.990696560000004' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='405' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.739322999999999' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.008118999999994' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='408' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.710762279999997' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.994003980000002' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='410' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.720664419999999' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.985179770000002' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='411' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.722280869999999' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.976687089999999' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='412' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.715815499999998' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.994223660000003' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='415' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.704717700000003' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.009260269999999' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='417' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.712912240000001' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.010202340000006' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='422' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.770513000000001' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.988038000000003' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='423' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.765849410000001' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.986905059999998' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='426' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.71754834' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.013220689999997' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='427' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.701906999999999' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.013942' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='428' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.724677210000003' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.987834129999996' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='432' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.72621788' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.983798550000003' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='433' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.729553609999996' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.98057249' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='434' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.743174490000001' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.003664430000001' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='435' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.741739690000003' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.994155559999996' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='438' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.727791260000004' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.985649449999997' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='439' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.726280699999997' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.989780409999995' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='440' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.752554340000003' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.972826249999997' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='441' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.756014' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.967416' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='442' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.746647000000003' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.993915000000001' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='444' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.742354300000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.989150760000001' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='445' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.727407939999999' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.981420060000005' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='446' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.744876339999998' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.995298849999998' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='447' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.76370739' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.985161500000004' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='448' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.756603589999997' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.997900900000005' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='449' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.764618370000001' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.987894729999994' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='450' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.76227205' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.987882049999996' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='453' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.744751479999998' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.999153620000001' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='454' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.754557310000003' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.965929759999995' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='455' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.750019860000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.969053009999996' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='456' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.759710800000001' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.974023110000005' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='457' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.766953170000001' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.981693329999999' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='458' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.751396' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.005225999999993' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='459' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.746744999999997' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.007756000000001' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='461' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.735876779999998' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.982050270000002' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='462' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.746919589999997' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.004518869999998' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='465' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.75513557' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.986580320000002' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='466' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.743954109999997' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.99144871' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='468' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.765265399999997' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.981923379999998' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='469' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.763440580000001' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.982681290000002' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='470' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.743453350000003' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.000040310000003' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='472' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.745712099999999' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.981948290000005' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='473' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.721100630000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.9919254' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='474' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.745167700000003' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.986830769999997' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='476' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.743943139999999' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.979660690000003' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='477' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.756405479999998' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.990026200000003' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='478' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.760300960000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.99884222' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='479' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.760192519999997' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.991255100000004' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='480' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.766696709999998' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.990617279999995' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='482' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.739355420000003' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.999317829999995' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='483' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.732232719999999' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.988899570000001' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='484' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.75500254' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.980144370000005' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='485' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.75038009' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.983389880000004' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='486' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.746200899999998' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.988557229999998' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='487' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.73314259' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.975738809999996' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='488' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.756458240000001' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.993722219999995' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='490' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.751550999999999' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.993933999999996' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='491' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.740963739999998' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.986022129999995' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='492' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.750199950000003' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.990930849999998' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='494' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.747348250000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.997235509999996' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='495' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.762698819999997' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.993012219999997' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='496' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.737261859999997' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.992389669999994' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='497' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.737049839999997' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.990092959999998' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='498' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.748548620000001' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.98808416' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='499' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.769155050000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.981918410000006' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='500' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.762288259999998' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.983361830000007' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='501' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.744219000000001' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.971212140000006' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='502' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.714215000000003' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.981346000000002' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='503' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.738274279999999' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.987519680000005' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='504' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.732218529999997' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.981655570000001' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='505' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.749012710000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.988483950000003' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='507' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.73912601' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.979737760000006' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='508' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.763413790000001' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.996674440000007' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='509' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.745497299999997' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.001971389999994' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='511' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.729386849999997' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.977724289999998' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='513' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.768253999999999' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.988639000000006' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='514' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.76087502' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.002776679999997' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='515' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.760094369999997' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.994618430000003' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='516' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.752068620000003' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.96784384' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='517' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.751581000000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.977909999999994' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='518' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.747803730000001' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.973441899999997' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='519' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.751873000000003' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.977705999999998' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='520' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.759922619999998' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.976485159999996' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='522' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.757147580000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.972078359999998' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='523' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.75466591' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.991381520000004' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='524' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.755273070000001' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.983169360000005' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='525' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.755941589999999' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.002116299999997' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='526' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.747659470000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.984907070000006' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='527' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.744022999999999' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.976056' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='528' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.742909019999999' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.97706058' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='529' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.7575699' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.990985069999994' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='530' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.771521999999997' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.990540999999993' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='531' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.718939040000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.992662879999997' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='534' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.702550649999999' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.012723399999999' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='536' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.741443869999998' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.975360820000006' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='537' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.740258779999998' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.984092140000001' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='540' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.743115549999999' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.982153530000005' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='545' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.736502000000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.978094720000001' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='546' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.744449209999999' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.983035290000004' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='2003' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.733812190000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.980544210000005' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='2006' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.765909360000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.976341509999997' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='2008' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.705692540000001' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.016776849999999' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='2009' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.711174440000001' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.996826189999993' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='2010' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.721654809999997' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.002347369999995' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='2012' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.739445000000003' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.976805999999996' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='2021' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.759291240000003' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.988596509999994' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='2022' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.759107' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.959222999999994' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='2023' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.759680850000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.970313660000002' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3002' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.711511999999999' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.015755999999996' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3131' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.767128399999997' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.962246179999994' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3132' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.76350532' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.971092429999999' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3134' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.763125840000001' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.965268949999995' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3135' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.771129270000003' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.957722970000006' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3136' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.766368' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.971518000000003' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3137' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.772828169999997' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.966852759999995' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3139' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.771182879999998' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.964094220000007' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3140' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.771404259999997' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.9535166' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3141' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.765005250000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.95818491' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3142' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.761227400000003' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.960940219999998' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3143' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.776321420000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.964273930000004' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3144' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.776777019999997' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.959009699999996' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3145' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.778626879999997' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.957720730000005' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3146' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.775730340000003' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.956752600000002' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3147' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.778012029999999' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.954071490000004' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3148' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.775655409999999' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.950686149999996' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3150' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.775369050000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.94803392' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3151' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.772838399999998' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.949892329999997' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3152' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.768736869999998' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.961199449999995' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3155' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.76440023' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.966489769999995' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3156' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.766638139999998' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.953482960000002' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3157' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.775186150000003' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.944460539999994' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3158' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.771638510000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.982614280000007' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3159' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.77492513' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.982665659999995' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3160' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.77896784' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.973747369999998' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3161' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.780183970000003' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.977285330000001' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3162' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.783399809999999' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.980931330000004' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3163' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.773406600000001' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.977825420000002' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3164' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.777057499999998' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.978984749999995' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3165' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.77579377' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.976205739999997' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3166' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.780577989999998' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.985624310000006' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3167' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.779668090000001' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.980930450000002' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3168' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.784726749999997' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.969617150000005' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3169' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.78720869' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.981281269999997' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3170' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.784999790000001' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.972834059999997' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3171' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.785246720000004' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.976673210000001' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3172' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.778566900000001' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.977549609999997' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3173' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.777507030000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.988885879999998' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3175' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.77748046' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.982885940000003' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3176' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.774528349999997' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.987537590000002' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3177' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.786794700000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.977112000000005' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3178' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.78414472' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.983624919999997' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3182' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.686931000000001' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.016965999999996' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3223' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.75899656' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.968653979999999' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3224' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.739973540000001' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.005138729999999' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3226' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.78275' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.971369999999993' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3231' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.767800800000003' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.96592081' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3233' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.757245679999997' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.978059139999999' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3235' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.75216528' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.979921939999997' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3236' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.758984810000001' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.993799690000003' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3238' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.773913899999997' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.954395349999999' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3243' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.758923860000003' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.962262269999997' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3244' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.731437239999998' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.99490342' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3250' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.716909780000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.983837960000002' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3254' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.692316609999999' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.014865760000006' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3255' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.750585350000001' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.994684820000003' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3256' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.727714079999998' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.011295739999994' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3257' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.773768670000003' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.971169889999999' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3258' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.750181560000001' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.002184270000001' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3259' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.749370239999998' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.999233840000002' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3260' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.727063630000004' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.99662137' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3263' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.729236499999999' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.990868030000001' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3282' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.783070000000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.959389999999999' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3283' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.788221300000004' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.970415610000003' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3284' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.781410700000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.95595908' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3285' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.78839' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.974699999999999' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3286' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.780628399999998' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.952166700000006' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3288' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.778300999999999' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.948813400000006' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3289' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.790179479999999' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.972889179999996' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3290' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.777945299999999' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.946040999999994' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3292' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.785785099999998' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.957481000000001' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3293' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.792099999999998' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.9739' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3294' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.783501600000001' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.955326999999997' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3295' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.791269999999997' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.964838999999998' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3301' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.791955700000003' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.968086999999997' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3302' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.796934700000001' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.964341230000002' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3305' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.7811223' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.949655890000003' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3307' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.794165399999997' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.974124000000003' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3309' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.785920099999998' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.948602940000001' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3312' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.7817212' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.945939999999993' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3314' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.7937704' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.971888000000007' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3316' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.798993699999997' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.966217380000003' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3318' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.7839636' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.947167300000004' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3320' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.793393000000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.963555600000007' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3323' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.798185599999996' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.9605909' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3325' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.784903200000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.950502999999998' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3327' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.787721400000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.947283310000003' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3328' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.795000000000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.964500000000001' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3331' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.8013434' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.971145739999997' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3336' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.787801000000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.953558999999998' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3338' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.786258599999996' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.945525790000005' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3341' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.795346000000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.961860000000001' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3343' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.799756799999997' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.962112869999999' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3345' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.789485419999998' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.952429289999998' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3350' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.797372099999997' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.970411920000004' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3351' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.7869946' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.941648020000002' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3355' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.768008889999997' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.968452810000002' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3356' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.774667100000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.984705669999997' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3357' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.8008363' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.966449249999997' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3359' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.769157200000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.967034639999994' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3360' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.7829391' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.9786517' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3362' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.778131399999999' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.960693989999996' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3363' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.790482799999999' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.950330679999993' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3366' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.8021174' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.968180529999998' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3367' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.792255300000001' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.952499329999995' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3369' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.772460680000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.946820799999998' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3370' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.7727966' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.955778010000003' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3372' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.768973799999998' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.954822730000004' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3374' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.799484' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.955613' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3375' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.7699426' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.960607120000006' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3376' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.764718520000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.962220700000003' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3378' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.773763000000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.962220880000004' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3379' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.790305099999998' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.947557570000001' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3383' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.804212999999997' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.966991039999996' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3387' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.793433700000001' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.949450029999994' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3390' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.793296679999997' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.943208299999995' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3391' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.789252900000001' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.939562370000004' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3400' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.796153500000003' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.947821450000006' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3424' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.791975999999998' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.945993000000001' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3425' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.789210500000003' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.943707840000002' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3427' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.724305270000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.996009830000006' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3428' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.740983' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.001701999999995' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3431' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.746524000000001' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.977885000000001' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3434' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.790254169999997' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.977183400000001' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3435' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.718822000000003' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.995959999999997' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3436' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.721319000000001' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.010064999999997' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3438' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.77224854' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.958421349999995' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3441' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.752957000000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.00264' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3443' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.761329830000001' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.979820009999997' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3445' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.791811719999998' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.978602289999998' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3447' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.76703432' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.956227299999995' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3457' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.763025939999999' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.972095249999995' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3458' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.763093869999999' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.978350160000005' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3459' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.757632280000003' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.969305750000004' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3461' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.714851510000003' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-74.011223319999999' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3462' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.751183869999998' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.971387149999998' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3463' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.735367060000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.987973929999995' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3464' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.752270940000002' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.98770571' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3466' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.756687210000003' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.982577320000004' />
                </groupfilter>
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:start station id:qk]' member='3468' />
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:start station latitude:qk]' member='40.730380099999998' />
                  <groupfilter function='member' level='[none:start station longitude:qk]' member='-73.974750200000003' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0pd5n020n1p5lm18sgfi01igzamw].[none:tripduration:qk]</column>
            <column>[federated.0pd5n020n1p5lm18sgfi01igzamw].[Inclusions (Start Station Id,Start Station Latitude,Start Station Longitude)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0pd5n020n1p5lm18sgfi01igzamw].[none:start station longitude:qk]' field-type='quantitative' max='-8222597.0693142358' min='-8251918.1915334547' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0pd5n020n1p5lm18sgfi01igzamw].[none:start station latitude:qk]' field-type='quantitative' max='4985271.7719211662' min='4964882.0470469892' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0pd5n020n1p5lm18sgfi01igzamw].[cnt:start station id:qk]' palette='sunrise_sunset_diverging_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.0pd5n020n1p5lm18sgfi01igzamw].[avg:tripduration:qk]' palette='sunrise_sunset_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.0pd5n020n1p5lm18sgfi01igzamw].[none:start station id:qk]' />
              <tooltip column='[federated.0pd5n020n1p5lm18sgfi01igzamw].[attr:start station name:nk]' />
              <size column='[federated.0pd5n020n1p5lm18sgfi01igzamw].[cnt:start station id:qk]' />
              <color column='[federated.0pd5n020n1p5lm18sgfi01igzamw].[avg:tripduration:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#a70000' />
                <format attr='size' value='0.58171272277832031' />
                <format attr='has-stroke' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pd5n020n1p5lm18sgfi01igzamw].[none:start station latitude:qk]</rows>
        <cols>[federated.0pd5n020n1p5lm18sgfi01igzamw].[none:start station longitude:qk]</cols>
      </table>
      <simple-id uuid='{C4E76A16-3B1A-45DC-8EDA-96F001EDA1EA}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources>
            <datasource caption='201706-citibike-tripdata' name='federated.0pd5n020n1p5lm18sgfi01igzamw' />
          </datasources>
          <datasource-dependencies datasource='federated.0pd5n020n1p5lm18sgfi01igzamw'>
            <column-instance column='[start station longitude]' derivation='Avg' name='[avg:start station longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[tripduration]' derivation='Avg' name='[avg:tripduration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Set 1]' derivation='InOut' name='[io:Set 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[tripduration]' derivation='None' name='[none:tripduration:qk]' pivot='key' type='quantitative' />
            <column caption='Start Station Id' datatype='integer' name='[start station id]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[tripduration]' derivation='Stdev' name='[std:tripduration:qk]' pivot='key' type='quantitative' />
            <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pd5n020n1p5lm18sgfi01igzamw].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0pd5n020n1p5lm18sgfi01igzamw].[avg:tripduration:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0pd5n020n1p5lm18sgfi01igzamw].[std:tripduration:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0pd5n020n1p5lm18sgfi01igzamw].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0pd5n020n1p5lm18sgfi01igzamw].[avg:start station longitude:qk]&quot;</bucket>
              <bucket>&quot;[federated.0pd5n020n1p5lm18sgfi01igzamw].[avg:tripduration:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0pd5n020n1p5lm18sgfi01igzamw].[none:tripduration:qk]</column>
            <column>[federated.0pd5n020n1p5lm18sgfi01igzamw].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.0pd5n020n1p5lm18sgfi01igzamw].[Multiple Values]' value='70' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0pd5n020n1p5lm18sgfi01igzamw].[:Measure Names]' value='59' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0pd5n020n1p5lm18sgfi01igzamw].[Multiple Values]' num-steps='2' reverse='true' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#bbc1d8</color>
                <color>#bfc4d8</color>
                <color>#c4c8d8</color>
                <color>#c9ccd8</color>
                <color>#ced0d8</color>
                <color>#d3d4d8</color>
                <color>#d9d9d9</color>
                <color>#bec0c2</color>
                <color>#a4a8ab</color>
                <color>#8b9095</color>
                <color>#73797e</color>
                <color>#5d6267</color>
                <color>#474c51</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0pd5n020n1p5lm18sgfi01igzamw].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#d00000' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pd5n020n1p5lm18sgfi01igzamw].[Multiple Values]</rows>
        <cols>([federated.0pd5n020n1p5lm18sgfi01igzamw].[io:Set 1:nk] / [federated.0pd5n020n1p5lm18sgfi01igzamw].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{09AD6C6D-B363-4D81-921C-B08427A434BA}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='201706-citibike-tripdata' name='federated.0pd5n020n1p5lm18sgfi01igzamw' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0pd5n020n1p5lm18sgfi01igzamw'>
            <column-instance column='[tripduration]' derivation='Avg' name='[avg:tripduration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station id]' derivation='Count' name='[cnt:start station id:qk]' pivot='key' type='quantitative' />
            <column caption='End Station Id' datatype='integer' name='[end station id]' role='measure' type='ordinal' />
            <column-instance column='[end station id]' derivation='None' name='[none:end station id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[start station id]' derivation='None' name='[none:start station id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station latitude]' derivation='None' name='[none:start station latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station longitude]' derivation='None' name='[none:start station longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
            <column-instance column='[tripduration]' derivation='None' name='[none:tripduration:qk]' pivot='key' type='quantitative' />
            <column caption='Start Station Id' datatype='integer' name='[start station id]' role='measure' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Latitude' datatype='real' name='[start station latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Longitude' datatype='real' name='[start station longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Start Station Name' datatype='string' name='[start station name]' role='dimension' type='nominal' />
            <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pd5n020n1p5lm18sgfi01igzamw].[none:end station id:ok]'>
            <groupfilter function='member' level='[none:end station id:ok]' member='2006' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0pd5n020n1p5lm18sgfi01igzamw].[none:tripduration:qk]</column>
            <column>[federated.0pd5n020n1p5lm18sgfi01igzamw].[none:end station id:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0pd5n020n1p5lm18sgfi01igzamw].[none:start station longitude:qk]' field-type='quantitative' max='-8221655.427823537' min='-8247717.601190716' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0pd5n020n1p5lm18sgfi01igzamw].[none:start station latitude:qk]' field-type='quantitative' max='4984632.0915647289' min='4966508.6193249244' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0pd5n020n1p5lm18sgfi01igzamw].[none:start station id:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.0pd5n020n1p5lm18sgfi01igzamw].[cnt:start station id:qk]' />
              <color column='[federated.0pd5n020n1p5lm18sgfi01igzamw].[none:start station id:qk]' />
              <lod column='[federated.0pd5n020n1p5lm18sgfi01igzamw].[none:start station name:nk]' />
              <lod column='[federated.0pd5n020n1p5lm18sgfi01igzamw].[avg:tripduration:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
                <format attr='size' value='0.84558010101318359' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#d00000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0pd5n020n1p5lm18sgfi01igzamw].[none:start station latitude:qk]</rows>
        <cols>[federated.0pd5n020n1p5lm18sgfi01igzamw].[none:start station longitude:qk]</cols>
      </table>
      <simple-id uuid='{42499D9D-5FAD-46E3-A2C5-3930A9FB2DFB}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources>
            <datasource caption='201706-citibike-tripdata' name='federated.0pd5n020n1p5lm18sgfi01igzamw' />
          </datasources>
          <datasource-dependencies datasource='federated.0pd5n020n1p5lm18sgfi01igzamw'>
            <column-instance column='[tripduration]' derivation='Avg' name='[avg:tripduration:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station id]' derivation='Count' name='[cnt:start station id:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station id]' derivation='CountD' name='[ctd:start station id:qk]' pivot='key' type='quantitative' />
            <column caption='End Station Id' datatype='integer' name='[end station id]' role='measure' type='ordinal' />
            <column-instance column='[end station id]' derivation='None' name='[none:end station id:ok]' pivot='key' type='ordinal' />
            <column-instance column='[tripduration]' derivation='None' name='[none:tripduration:qk]' pivot='key' type='quantitative' />
            <column caption='Start Station Id' datatype='integer' name='[start station id]' role='measure' type='quantitative' />
            <column-instance column='[tripduration]' derivation='Stdev' name='[std:tripduration:qk]' pivot='key' type='quantitative' />
            <column caption='Tripduration' datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0pd5n020n1p5lm18sgfi01igzamw].[none:end station id:ok]'>
            <groupfilter function='member' level='[none:end station id:ok]' member='2006' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0pd5n020n1p5lm18sgfi01igzamw].[none:end station id:ok]</column>
            <column>[federated.0pd5n020n1p5lm18sgfi01igzamw].[none:tripduration:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0pd5n020n1p5lm18sgfi01igzamw].[cnt:start station id:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f28e2b' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0pd5n020n1p5lm18sgfi01igzamw].[avg:tripduration:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0pd5n020n1p5lm18sgfi01igzamw].[std:tripduration:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#59a14f' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0pd5n020n1p5lm18sgfi01igzamw].[ctd:start station id:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f1ce63' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0pd5n020n1p5lm18sgfi01igzamw].[avg:tripduration:qk] + ([federated.0pd5n020n1p5lm18sgfi01igzamw].[std:tripduration:qk] + ([federated.0pd5n020n1p5lm18sgfi01igzamw].[cnt:start station id:qk] + [federated.0pd5n020n1p5lm18sgfi01igzamw].[ctd:start station id:qk])))</rows>
        <cols />
      </table>
      <simple-id uuid='{F5F285DA-CB3A-4B11-8318-2C33E014BE90}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pd5n020n1p5lm18sgfi01igzamw].[none:Tripduration (bin):ok]</field>
            <field>[federated.0pd5n020n1p5lm18sgfi01igzamw].[none:tripduration:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{33EFE050-53A0-44FC-B31B-4D8AE9319C99}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='204'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='81'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
            <card pane-specification-id='0' param='[federated.0pd5n020n1p5lm18sgfi01igzamw].[avg:tripduration:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0pd5n020n1p5lm18sgfi01igzamw].[cnt:start station id:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pd5n020n1p5lm18sgfi01igzamw].[avg:tripduration:qk]</field>
            <field>[federated.0pd5n020n1p5lm18sgfi01igzamw].[none:start station id:qk]</field>
            <field>[federated.0pd5n020n1p5lm18sgfi01igzamw].[none:start station name:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{3D11451C-1C99-473B-AAE6-9357170A9DE3}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='298'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0pd5n020n1p5lm18sgfi01igzamw].[avg:tripduration:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.0pd5n020n1p5lm18sgfi01igzamw].[cnt:start station id:qk]' type='size' />
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pd5n020n1p5lm18sgfi01igzamw].[attr:start station name:nk]</field>
            <field>[federated.0pd5n020n1p5lm18sgfi01igzamw].[cnt:start station id:qk]</field>
            <field>[federated.0pd5n020n1p5lm18sgfi01igzamw].[none:start station name:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{5954780E-A7AB-4508-86D5-870AB0E9DC66}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0pd5n020n1p5lm18sgfi01igzamw].[Multiple Values]' type='color' />
            <card AVG='true' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pd5n020n1p5lm18sgfi01igzamw].[:Measure Names]</field>
            <field>[federated.0pd5n020n1p5lm18sgfi01igzamw].[avg:tripduration:qk]</field>
            <field>[federated.0pd5n020n1p5lm18sgfi01igzamw].[io:Set 1:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{32903B7B-43E1-42C8-A5CF-4000D8ECEF86}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='298'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0pd5n020n1p5lm18sgfi01igzamw].[cnt:start station id:qk]' type='size' />
            <card pane-specification-id='1' param='[federated.0pd5n020n1p5lm18sgfi01igzamw].[none:start station id:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pd5n020n1p5lm18sgfi01igzamw].[none:end station id:ok]</field>
            <field>[federated.0pd5n020n1p5lm18sgfi01igzamw].[none:start station id:qk]</field>
            <field>[federated.0pd5n020n1p5lm18sgfi01igzamw].[none:start station name:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{B118A79D-ED9D-48D0-91AB-68B8C6D93969}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0pd5n020n1p5lm18sgfi01igzamw].[none:end station id:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2CB4981B-569B-49B7-820D-2465A27D0144}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      gSOoHthKODWCGskCVTqooPxSNwEyRWmVn5tcLpXzvk9aa9Tks+hn/zl6tB/N0V2+S9oJcT1C
      p8vfce7KEirR1N+/xMX/8BrtizcBcGdPrG4C2YiMoUE7w1o1i+d5fTWmhvl932dkeIRWq0W9
      Uc9ygtLes01HhbX0AbrTZIfnbUy6L/fJ0l7FfjX3ijbz+e12izRVeTG6AGb/w6voVDH5+y9R
      f+UEKlGoJEUlClvuxNISnR1PkMwcIq2MEDs+bpplkAoE0pd5lnBfHyjhQnkbQmvEYh2qZXQ3
      kKaB7c/sZNuTMwgpaZ65gT9awR3OEuRmHpxACEH1wHa2fwHCqazoJi2PrywAq2mL9U7moOuM
      hk9Vmtd9ZqcU9nYWczLJZuf+3A6tlCdUBAIMDRKCe0mmR9JG+vpDLxrvWWapBqqP7UKnChxJ
      +aks4LTf91BxilPpHlZSr+N9468giki+8AViJ8izegHc5k2ScxdJdx1BaYUrBU5jjrQylmt6
      ff4anb/8Ed6nn0Yc3tMbmADhSuIbDc7/6VGGH5pi++ce7n2uNc5QSO3JXfmfomBksACshfmL
      eO2tyPd9/GD50aVCCFrtNktLSwiyTg86Wg6FmbMG7iUt81MGzIVN9xssuhlHm7ZarYEpL5Un
      diPo1ntXu9VkGhyvZ7KKNIV2lJ0FnMS5kssbp4VV5LY9OV8E59/Cf+cbxAdeIjr4yezvwxWc
      fTOILb1WLVqRHRSz2ECeucD2Tz9IODWafx6dn+PG944z8YVH8SaGEFqjjbm/2suu5AgXQ9Kr
      kdZZw9hqtZqnQdjUarVoNLPGSXES0+l0KJfKWbG9lR7hed6mnU+1GWQz//3G6IPIRH7XQ3as
      I68L1xrv+hXcuVmMjdM3A6nm+qunufSt90gb3bMZajXilz9P8ne+SLJ1a98zlFJ0NLQdPy+S
      0mEVHdbQJYvZh6s4n38BtmW9fjrNmDf/8j06jRhaEXpugZGHpnADJx+QihLSRhsdddt1fvAB
      stWiFJaWZ4Muy9Zcxd5fLTXCfA5Qq9VW1D5KKRaXFmm2mqRdxKBWq1EKS3nxi6EoipZlgd4N
      shd/kNM/yOG1nfd7DYuaUys3MgalVF8qinf9CqVv/xl4Hs3P/g5pbaRPAJKbLT78v35KvNRm
      z1eeonZ4sq8C0JCNsNlQctZsQeLqBO10EZxfniQ4vAM5Vu09p5Ny9hfn2Ll/lGByFLTi5i/P
      MPvdd5n49YepPb0nqx7rpIggU8AySZC+T2Vo6NapEKtpuFsxv9H+q9nAptilUu6d7tJqtfLt
      0aZ7lUdvqJh/ZNCrYmOre5WnVKRarcbIyMimQaB2N2wtnexAa9dHLzZJvn8U5pfyz52hgPGn
      djH22A7KOzJtneqVkTEDdtgopNIa5QRZe8PrC9R/+h6dj6/2Xef6DrunS3R+/DaqE6OEQAYu
      MvCQXYZHiJz5tdakjkNoTuhZaQdYqTJrrROpdZYCW61UBx6QYb5Tb9RptdtZHAFBo5lp+CAI
      GB0Z7ds5jCO3YlHOHSIj/INOurQVhJk3Ixz3Mhbg+z7VavXWX1yFTKauaQXft/tqjbt0E6RD
      fHmB6C9+jP/yi8hDPSdTAOmNOsJzYCjMU+FtWi3bwByhBCCUJr5wA3frMIQeupMSL7bxxyuQ
      Kmh1oOt7CASq2UGUvWX31FpTKpXydJBVneBi49a1krnelK+ttgNEUYRWina31rhcKtOO2nlv
      T1sAbEa7E4y1kulnJ5EV/1YUAvO3e232bKSlIfTmwvQvXXbOmxAktczRlPtrhL//RRjtF7jO
      qcvc/OMfgxSMfvVTiKkRirRSsFVKiUxSOPERHNqHdl3cnb0ku7QdkzSiTAAcmTN/eqNOdP4G
      5Ydmlt1Ta43neXl1oVIqM4GKGt/ewgct+lrItNW+1TV2lDdNU5qtJoEfEPjBQNjzTjmcZg5M
      IKv4DGNGrBQHKc7Z/WCqbcY9jO+z4nnKSrP47kVajQQKii69sZRp5zglna/f1pgcBKIdoT8+
      h+j0PzttxVz41rs9E8cac/2ts8x98y3i60t9nxmlaScCNpvN/h2guB3ZSMftmD6wthLFrGlu
      fxeILMzezA+TLj47jzwqtWn4uh3BhX5Nr7XOg3Xm8O9BVJyzuy0A9tg3o8LLzLtB4KSUyJvz
      iPkbJDt3o825wa2Y2R99QLh9mNLMKFgJaOGRXbTfOweeQ3BgesVcn+KzXcdFHH0PnaaIz36S
      udfPUn1wEncsK2QXnsP4k7vxu4Xt+RwkitpzD1A+OIm/veeUmzWzDyiP4wxxdKEg7SrNDhSW
      8rbNDfN901jpVtdl/V4G59cYvNl0KLM1f/FYzI3QoDyfIvm+n7eGXE3o7rXW191OyRstbjf3
      s6PeWmu8738b58I5+PLfJ5naQf31jxG+y9TfeRynEvQxP0Dn7CzRhRsgBPGlOcSuLUBWSyDT
      Nlr6qG5hi2l9r0x3wV1TkCqUlKRRnAXZgKid8LMfneTZF/f17QCqk3L+m+9SmRph6zO7iH75
      AbJawj20E6V13vHCrJ+pLXGLdm/WwSFrRX47wS4b9Vlrvrnv+1QrVZbqS8s+01pn6bbWsUo2
      Hr1SgfftUNHsgX5/x9iiWuv8kOs75X9slIzy2gzEJ4oipOydCLmwsJDd/8CD4Aeo0XHSm03m
      v/MOMvCY/KefQZR8Wjea+EMBjp9pWdXqdI8+1ehWB1c6aK1wTv8EPvgOYngG55mv4lTHiKMW
      7rWfoKs7SSu7URO9w+zGfu1g387quQ6y+I5KE8018SoBam6J1nePIodKDO2dxAn93O4XQuTH
      0wrRzQYt5rVIKfK8/Nu1t03vnrUsgrHJlFYsLCws+zxrkZj2+Ql2sbSNyqxn0W2BGkSmYs2g
      H/cj40OP+Q36tFEKw5AkSfLzGfLeSw89SvzQo5lZGMLIpx/O4MayT/1qnbf+6HVmnt7Frl/N
      UhScB6a5unUr0nXYsmd7Nr4kQr//TZg7C3NnYNfTqNJzCAFCJ2i9/FATO6/fDxw+8ZmDvTVL
      NUvvXgAh2Pf3n0SGLkJKSp98HDFUQvse5a5CNu9imir4vt+/AxiSQpIKle8EhgzDDYKstM56
      uJsi9rWSEGJgaN1QMf++CIHagnq7SNVqMQ5j+5tjjO42pp8qlWu5W8VbNjPz1D6iqlQq9Smm
      Pl9NQPXZrN15mmqunLrO8K4xRnaO5us5d6PJsdkU6Sim5luMlb3sfLChbTB/DvwKMlnEPf6H
      pBNHSLZ/kuJSdJoxaaIo1bpRbA2LZ+aozgwjXMnSexe59GevA4LprzxD9XB2frD//GF01/Sx
      j6cyJ3caU1EWv2BICgG6v4HtSgth7P6hoaF1OaYmWFa81vZNgBWzQdeDCt2K+Ysm191OdSiX
      y7ieB2L1Zl0andvN0DsydD1kTD7TCbzVaqHTFO/GNZzmyhH4pdk67333JMHWGmEt5PR3TnDj
      xDVqIyV2HJhg3+PTDG0pd58hEc/9I8Qn/lvEp7+GP/c27pVf4n/4Z8ikAdbaaqV5/evH+dkf
      v0ncytY+aXS4+MOTRPO9k2ey7YO+9ulGIWftFHs1BiafrFwuZ8dUmRRlg4sazDdJElKVkqYK
      z1kZ1zbaYqWjitZCpuOzlDIvjjfnitmC2Yra3QixWG4D3gYZhjL/G3vXNGI1GtUIXJEBVwre
      bBY5brZgRjm1uv7HoPfQGtzueWqe6xL668v3se8J5Onn3sWzhN//Bsneg7Re/I28+4c9J7WJ
      Ks9+5XFGZ4a5evQ8Z3/0EdWpWdyhEHltiUc+9zxe6JJcnGfpJ+8TPrCd8pMvABp1/ZfI+gUS
      XaX14Szq5jlKzz6IdiRCCqYPbaVxs0W7neCVXNyqz4HffRIZZHxRPTzFzFeeBSmoPLCt711s
      1MdUsEFm+pi/u7bdaJjQBD/SxZQk7pCQUApLA6uiTGRtPWkKxqRxXZdyuUKj0aBSqeQRTKVV
      b+uK2uiuCaZ1diL4RkoQ7UCP67pEUZRviwbutANxK8VK7gSlqQIR4zruGqLeGikEW8cnNuSg
      27tcs9nM+/P4WmX9+rs9++sfzXL5ex8w9euHqOzOHNUkTpm9ukQ7SRndvYWxBybwRkpc/eAa
      UmukzMCK9oeXaL1/gbTRpnRkF/gOnYNfIZn+BNe+e4HmD95m7IV9fbvA7kenuHx2nh/++Tv8
      xu8+TlDycuYHMsY/NLnsPWwgRmvdl0EQBL32K8viAKYVumlTqNIUlab4fsBwrZbvErZtvJEs
      TcPQlXKZkgV5CiFwZRZI68QxbasbnL3du87qDvcgJMsIvTn9ptPp5MJtBNLsiOZYV9jctomr
      ktakcYJK1cADBO33cYRD0J239Y5JKUWrvkh6/RwMTZA4vV0knt6N/vzvoMqZUqqfuUHj7A0a
      5+ao7tmC1pqLJ6/z+rdPMDRa4gv/5AWO/BdP8fP/702uLUQ881tHCCo+11/5iHgppvz4XkoH
      J8EgRcJFD+2i+lQVf8ck5cd39w61SzVKpWydGeal3zqCH/bDntJ1ljX2MaaPXfgfRVHuSxqU
      zHQ6z1EgpRTNVpN6vZ7nfthHIiVJ3Hfmb57DrRRL9SU818tNlrVqxyJqIaVcdmyo6kKQtv2f
      3TtDqwalIJh3ssdZHJPjOERR1Icq2TEBu52hMfOKW/+dJq3ULVsN+L6/IbNHa02rsUTnL/4l
      XDkBlTHk5/45amQGNGgpibd2NazSbHtxP9VdWyhPj6BihfQkY5M1tu8ZY3Rb5gO+8Z9PMHtx
      gYm9Y2w7MMHC8Utc+qt3AJj5O48RHpruS3XUaPwdYwQ7t/TmvJNy4a+PEc012PmbjzG0pZJ/
      f+HMPB/95/cZ3TvOns8cyIXA+DCmz6lZrzyDtXs0rfluHgnWOsvFFwjK5TKdqIMjs05tpm+n
      I51cU5r/IWOsJE5IkzR/kNGgBhJdi3lkmxh2B7AoatPp9CKwWZpsr2fQILKhTRO8KmL4xeOe
      bCoK0UoI0L2OCQghco223kJ8pRTJ5ZNw8Vj2h8Wr8NErJPte5vpPPqQ0PcrwEztpXV5k9hcf
      M/7ULsKpEd7+k7eI6hEP/eYRhqeH+fXfexrpSC59MMuJn58BYN9TOyiPhNSv+QgnUyhOJcgC
      YzdbuBU/OxCvS7Yii1sxSx/NEi+2ac/W8S0BWLq4wOL5m2gFO1/ah+P34HrT6tHwnEF9jOlj
      lKtptZPvKa7jZkGwNM2Z3fd9XM9FpSp3EpvNZh86IoRY1rXBaGuTQJXX9bouvhWNG7RYNrPG
      SZw/z56kIuPZPydpSmqyDnW/YBWRLlujD9pFbKExE2eY5n6gMAzzIOF6zJ/83YYmslbjcTsr
      rRqeYumDK8y99jHBxHVqh6dYOn2d66+fQyWK8sHtzH5wDYBLb1yAxcw8HTqwlaHxMmHVJ+mk
      jE3VMvN2/wR7f//F7OedYzTOzXPy373K6OFJvAcnuXlxgYMv7UO6kmtvXyJuxmx7aDuTnzxI
      GqdU9/af/LLt0SnQmurUcB/zG6fXML9pp2nPlRDZWQMmFpCnQhSZ0tyk0+rQbDapVqo5MyVp
      mjuka9E4ed1np0OLXp2v+WeeZWswpRSNRrPPBjfPS5XCLbTLs49Wyhg3MyHshbZ3g7UG0OwC
      DfPd+6HGF3oljuvdhYyCCrdM0vz8H6BP/QyxdR963/NUR5oMPzJDaWYMEbhUd44Sbh3ixomr
      dBLN8MwISTumNhpy/s/fAGDv773A8PQIL/93nyCNUyqjpYw5BZR2ZpmjGpCuxAk9ZOhx/eN5
      Zj+6zt7ndhEOBcy+e4X65QWWXjuNPxyy6+89ifStdP3FFp23zzL1yE6ckQrO3CxpbQS/XOkz
      wZVS1OtZpaHneTnUbkwfQ8tygYpM2Ik6+ZZieran3ZM7BpU4roW07nV6Ns93HIdKpdJDfdpt
      oqg9+Hrr2CWtNUmakHbtZa3B97KuY3YKr53HM6jH6SD73jD+6j1R7w2Zo4w2Asl6nke73c46
      bm9/EDF5KI8jeONVpr/8ZJbfI6C8Y5SRR2dY+u4J0maHJ7/6NHEnwRXQ+uAyAG4lQ1eCigd4
      K5qopalhDv83v4YMHLZ3FPtf2EVYza498KWHWDw1y6VvvI3qJCT1iHSpTbCthhbQuTjH4k/f
      xxmtUBopI9stxMjYsnJPA9IIIfo6YNu+LYBYWFjQBhctOoLNZpNO3KE2VOvFB9KUOM5OjjRF
      7LaNv167OAxDyuUsWJIkCbM3rmPCgvbuJESvLbbR+rbN7zhOvluZE20MGYa2exAZuHNQsMuu
      /LrXZC9kFEUbPtDCpsXFxRU7buhU5x3W0nbC4kfXKW0b4urHc5z6yWl2P72Tvc/sBJllaQ4a
      d+6PJYoTb12k0054+OmdeBac2bhap3mtzsThbdRfO8nCsYuMfOphFt+9wPzRs8z8ztPUjkxn
      h2xcX8LZUoUuAmgzuDnY3WD+lUolFw5ziAe6pzDcqJMdLhcncU+jxgntqE2SJLkja7S11ipr
      adjdDZI0yRnEjqDeDk5unDlD9kkyUsj83DF7ZzLnifUlsgkJmtxsMsxfNHmK4yoiPvbf7wdt
      b1KcTZpJ0efaCBVRNPM3gMWP57jy6hnGH5lm7KFtOKFLuK2GPxyyeHkRdaPBtZ+fZng4ZPyR
      yWX3vn7sMs3ZOjtfegAkLMw1eeU7H9DpJIxP1tixb0v+3BN//g6L52/y5D9+HpZahKGksmOU
      ZKFF69JNgrGuEywFztZaPk5j2ti8YfxG3/dzODRNU5bq9UzQhcDrWi+uVppOt8+7VhlD252Y
      wyDM8PAkQWlFqVRGCsHC4kIWhu9qYWMOGSG6na3ZjiNorYk7cdYpOPtLJmRd5MccvJ0JgcrS
      ZAV9yJBxfMzzi07sWswf+/N7TSZAt9lk75JSK8JXfwRRm/aLv4GSDjeOXebGu5fRqWL04Fbm
      T9/g7T96ne2PTTN5YIKl18+hFtuc+94HjB6YANdBo3FdiU40Z7//Ic3rDcYfmqS8rUq1FrLn
      0DaiVszYRBU0pHGKG7hMP7OLykSV6mQNOXMEUsXVn5+mdWWBPb//q4hwudBLKfvSaLTWLC4u
      5grY9/2cF9tRRKd7kqi0226maYqQWa9387PR7kopFhYXcFwXt+tdh0GQ51IbEiIrmrAd1kFo
      zUpkJ9ClaZofktHbSSRaJXlRtWmjLRBIK+5Q1GCDnr3SeO4HRl+J7tTYTOdtABHHuB9/iIja
      dJ56EVUZYuLxabRSbHloEuEK/KpPaaxCeayCihKEFOgU3JJHfTHi23/5Dkms+OzffZTQcWh5
      LqU943hDIVdP3WB42xCf/NLD3biK5M2vv8e103Mc+rV97H5qB1NP7eghbEKw8N4l2rNLxPWo
      LwhmqJiBYGo27M9MJ4pm9/BuWxECOH/wB3/wL9Iku0hK2c0ByhxKKSXScXAtGzhJE1zPzQqP
      lWJ4eJgwyI4yKh5ts1YzqHgC5NLSUmbXq15Cml0HYEwjad0/CIJlpkERrrzXXRrWS+b97Sq4
      jb6D1rrvmFntuKjpXcT7DpGOZqaJPxwyemAr4XhmfvhDAdNP7UB1Ej78+jHSTkJt5yj7f/MR
      zl9c4I2ff0x9sc3QSBm90ObM6xfAc2g2O7z518dp3mwzfXgbjitp3mzz1jeO016MiBoRk3tG
      ufKTU5Qnh5GeA1IwtHeC2v4J1MXZDDWqBPnYy+VyHgMxoIpBd+wTL4XI4lStVhsh6Cu0B3DN
      BLQ7WXG6lBLPdRFdBlMZmJ5f5LkegR8QBmGeLmGk0ESQb4fJ7Ia35kVyp1b0FgswZ+flgiId
      mTvEphCn3W73NYK1d6F7EbjSOsvWXOn0zLXew2QxttvtrMnYBv2Adru9zPGNxyaWf7FQ5SVc
      SfPaEkkz8wndakBpvMpM6DG1c5QkUew9uJXQlex8YpqR6RFSwAtc/LKHmf7ScMj0Q9uZ/XiO
      3U/uoHHhJtdeO8PwwW1Ud41lNvx4BZkmzP7lq2ilGZoYRmlFGIbLzGZj9xvmt/P/7VaOxfUX
      ly9fXtYWxaZyuUwn7hDHMdVqlXKp3Pc9IQSdTqfP8VjpiMtB5DgOtVotH+zi0mJ++ns+puyB
      fS+gtc5LNw1SY+oRTPQvf0nLAb6bu4DWvaNhpZCbpr1936dSqaz7PlprlpaWlgmAgDUccgWt
      a3U+/MtjxK2YPZ85yJbD27qaNtu1Xb+LsKmsNY5KNPW5JpWREnEjYvHSIsPTwwTDJZIoy/JU
      UUrzygKzb12kMllj4umslz9KE1+cwx0fQpT8/JwDG7VsNBpEUUQQBAM/W9bRwiLXdgINqpJ/
      6LqZtAUBrVYzb1donI52u52nTpv0WSGyKi872LAa2RHlbNZ6ppPBcU1Aa5n0FoJZxqmD5V2Z
      74XZoyw/SHedeSMIGxnPRpsEa637cqsyfwrkm8fQjz6MksvHppXm2qkbNOZbTB3ayiP/8FlU
      qnBCF63h+FsXGR2vMDnTa2MopODjj67z0Yez7N0/wY0zNzj9rfdJO5nj++jvPsH4gQnOvX2Z
      Ez89zaFndjJ79CxLW6pMPDYDUQdRDvB2dGuJrYJ/M27TrS4Mw2W16PbRWitRngs0SGPn3nX3
      iHrzUNMmI4qiPPPOJKwlSZJjryaz9FaLYQepbESm+HP+N8CVTg5zed3Al4FrDc5vhNAI092n
      5XOqtEKlWYrwRsyijZBRcrreZvFnH+BtHabyxB70Qw/2MjELdPXkDX7+h0fRSvPx6+d56b9+
      DqfrmM5eWeKv/+RNtk7W+Oo/+1XM6aVxnPKzH57k41PXef2XZ3gw1qgUFFBtJ5z+wUkmDm7l
      +tl55i8uEmvY99uPE4yUUHOL1P/kh4TPHiJ49sHc7i9aK1EU4fv+sniUyVi+FeU7gGGSYnTR
      DjCZGzcaDdI0pVQq5XkVZlLN59VqlSAI+tvpFQTNPLfT6eQ5LUIWan2lQOiuieO4eL5HGITL
      IrRGgEw8oblCEYmhzewssRJJIZFOf7/7HB27vQM6+2i9LSLNbmTQupvfe5fGG6cB8HdsQW4Z
      gq7Z0n8hXDp2Ca2ytVu63qAx1yIYDggCFyfVbBeSMelku4KUaA1pojn08BQCwfaZEdK3LnF9
      IUIBITq/36OfO8jOh7bReetjVDWkemQK3Yzw9kzibBvJTetikzTzHiWr5td8ttYDQVxjF2fQ
      lJPnwQN5MMlOO2i1WjnDmu3HNmHyYFp3JzBVVmZgg8je0sMgpFKpdL8r8Lo7jN1hrhjUGsQM
      JtffNunsa+2JvFMCYO7rOA5S9y/QRihXFrc5brPTmvl2RzN0R4Qejfk2H/38HB1H8tgn9xNY
      bQWjesTsyesYGGJ4+xBvvX2B4+9c4tCRKfZMDeMCqh2TRAmuH/Dz75/k3Tcv8PLvPMajT+zA
      8x0uTw3zyz99hyROCQOHPb+2P1O6rmRsxzBXj2ZNbJPrS7Te+ZjyCw8hx6o5k9vva3jMpITY
      O4OxRNY0l6lK+xrRGufSaCqTUGTMGZNDb6qmihrdHoTdSGpQno39IsaEARgZXt5C73Zteikl
      lUold6iNkNuBOvv3O+0jFINvG6H1CpDBxY1SG3rxQYJdE+jA49ifvcvCpQXmPIcdh7axZWuV
      m5eXmNg7hhd6VEdLRPUIx3eIJyt8/ycfouKU+GhCWe5ifN8WDj6zk6B7GEZjKaJZj4ijFNfL
      5n77kUk+tXWIxYsLBKNlSmPlHNoTnsP2Lz+BkJL6D49R/8lxEIKhTz8y0PQxu0IR1zc7w5rn
      5Gtf+9q/yMyfbt6N6DGafWMjVUV0xTZFzM/mumI7ccNodh6OjfObnCT7Pvb9V9P4g8g8p1hM
      X4RI/7bFBhzHue3uG0CuwHIGEQJnpIwMfeZOXidpJ2x9eJLdT8zw5tePc+w7HzA6WWNkssbw
      1DB+yWXXC7v54dEzzC+0SIGq63Lj1A3m51vUxqtM79uCEILd+8c5/Ng026ZrfWPwqz7BcImj
      f3Wck6+eZWL3GKVat5eRyBLv3NEqMvQpP7YXt5JZBEUya1c0B5vN5i0dX5tcw4BCyKwUT/Xn
      z9hMYyM2ts01aCEGMVXxfrYAmOy9Wq22qenGq+HlGzVF7hWZxMTbKUU1O22apll4Renc4ZWe
      w4N/91HiZodwpIR0JdOHthK3Y6oTVZYW2wxNDnFo+kGSRLH1rSGuXF2kUvbZPTPKlQ+vo9HM
      Xlqg2Yg59f5Vtk3V2DZVGziWNE5p3GzTrrdp3Ghy7c0LCCHY+6kHcAIHOVKh+skjQObTFdtg
      Gsa3yaTcm4CoaX51KxKXL1/WtrNbfIhxju2MyVKplBeut1qtdcFy5l7F6HEQBAwNDW3I0bOr
      o7TWzM/Pr/jsQVrkfqcgCAZqxdUo6nRI04T4Zp3Fr79COnuT4PH96MN7uPL+NbbsGaO2fahv
      x1ZK891vv8+771zkNz53mAcPbSduJ6RCcPrjWcZGK1R8l19+90OWFlo8hBbauAAAIABJREFU
      9ckHuHxtie998zgzu8b43d9/Fs8fjHTdvLREpxUTXVvixF+9B8BDX36EqSd7XZ0Nrn8r2Nj4
      piatw5yGY5fSrkSubccPslOLdr7v+3kqrsmtXg/ZJpH9rDiOWVhY6GtdMcgMsoXHONr2rlKr
      1XLGNn1uiu/2t9H8gQzfNpj3WijzgQRpCs3XTtA5fhaA5vff4uSbs1y52KA6UeET/+QF3NA6
      SCJVXLu6yM35JjdmG/z1q6+xcL3B8587xCOPT2e7SqwIR8v4wyFTe7cQA2PjFbZPD+O4y3fy
      +tU60VLEln1bQMA8Gtn9Xnms1+zWNCReS8zE+KiGoiha83lyy3qDFn82ziRktnRe3thNjrPD
      9IMGVmRym2x/oS/yW7jnepjUBOeMoBRp0Db6t4XM/Jj6ibVdlPl3zvhw1k8/VcihEqP7tjK/
      cImR6RFeOXqWo2+d58UX9vHkYzsQQvAPvvosUTuhVY/40x9+hEoUV8/f5IHHpwE4dvQ8v/jx
      qUwY0PzKJw/wT7/2KbTWXJmr87/++x/juQ7/wz/4BGPVkEvHLrN4eZHadA2v5DG6bwuf+Z8/
      l78XkBdHrXXNN3Js1sD26EbqDL5q8ntKpVJfz3/juHY6nVXt6bWgLCvtPushIXo586ttgX/b
      NL9NtzM3Gk3cBTHcQzsY+spLpLML+AdnGB4dYucLe0kE/O//+vvMzTdp/yAmbSVcODvHC7+2
      n+2Tw/zH//w2J3Wbz/7KAzz96QP5mu4/tI3TJ65y/uJNfv6Lj1lsdfjSbz6KUoo33rnAqQs3
      CAOXhXqb8eEy+1/ah0oUXqlXMZbzXZoCmrBbGbiW9dkogueuVu7X6XTyw62Nxi8+HHqOiiHT
      T6d4v9ul9V5rtk7YeNrA/Uq3kwwnhaRcyupzkzSh+eAO0r2T2anqAoIhH09p9u2doHX8Ert3
      jHHszQtcunCT8a1DVIdLvH38EvOdDknNwwtc3n73EktLbZ55che//XvP8LOffsT3vnuCTieb
      73feucjPvvsBD1aH+eIXH8VLBT/6wUkeOjLJ2GiFs8eu0K5H7H1iGtd3cFpNwh9/G5KY5NMv
      409Or/n9NiQAQRDg+37eCayHCok+O9PAoDZyY2P4g9IN7oWGNeM247kdSGytNMhnuptkWjmu
      lWwzUCBIGzGn//gXJPWIHb/5GOUdo+gk5Su//QQ3P3OYa9eX+OZfHWN69xiHH56iWvF59vFd
      fHT2Oo8emmL+ZpM//6u3qS9FjAyFHD6wjaef3c3U9AjjE1VcV1KthlTKAdVqwINT43z328c5
      /t5lFhdaHNo7wdGvv0fcTqiMlpg+OIFoNZBXLiLShGTxJnr71Jrm1+73uR5yvva1r/0LM0l2
      vaxhbpNQZIrY4zjO4bTVeuvcCzIHwxnbv9Fo3JEdIFUpSuu8ruhuCoLneX3NA26HzKkoi6eu
      ceUHH5DUI5zAJZgc4e3/9A6jMyNUhkv8zfdP8P6pa8zsGmVyZoSj713k+cd3cXDvVm4uNBmp
      lZibaxJoGLlY59qbF6mMlJl6YJyge2jF2FiZGzeanDx1jShKmJkeodWMmRircPSHp0jbCdt2
      jHDg6Z34JQ8dhOjhUdIde3H2HcS9xSEfxg/a6LG5bqlUGgippWlKkiT5pN3PZFJk7a5fjUbj
      tiKCayU7wzNVaWar3rJ/2+Y9237PtZJx+EtdM6gzM0p17zhJPWLk4SncksuuZ3ehHMkP/uYE
      MtE8dmSaRx+Z4c++/Q7vfHCZdx6c4vTpWZJEcWDvBP/s936VS788x0ffep82cO6VM4zu3YL0
      eoHU8fEKpZJHpeLz3At7eeqZ3dycrXPhxDXK4xUOvbgHlaisNBKB9+ARgjWeLrTWZLdb0bID
      MgwZm99kXK41uehuku2f2I7z7UYDb4fs9InMoLizzJ8qhdYqe44AuUHkSimFLHvs++pzaKWR
      QZZXNPHAOD/58Sl+9uNTVKsBX/1HL7BlvMLHl+e5Pt/AcyRJkpm4Zy7MMb/QpDpRpSkFjtKU
      t1SYW2xx6ux1Du3fxnCtxPPP7+XAgW2MjpZxnEwIt04P8+Xff5aFq3WOfv09vMDlpa8+RXkk
      6OsRdct5WSf8XiTX5PgUD7Wze3yaZLQ7yVhrITMeo82KmtAERDZiE65GrusyMjREHHeo1xt5
      c7A7TSZLtlar9R1Ysh7KGceVSAQLp2/Qudki3LeF771ykpZKCByf6lCIlIIvffowv/HiAT78
      aJYPTlxBac228SFGaiW+9a0TnE4VQsC+mWG+8Tfv8dpb53j0wUl2TYxw5JFpZnb053UJAcNj
      ZXSU4rhZtqwQ/ZD4WuZjs7IFXKVUXxAh/6B7uIBxtkzTUTu7826Q67p5rnexP5BNJhgy6F02
      g4To9p8RWQMBKlCv1+/Is2xyZFaa6nouvuff+oIVqNPpZHPTjhCvvo4ohTSn93D83/4ClSiq
      T+3AE5IbKHZtq/LRuRuUSx57doxRDj1coIyDcARf/NRDtBsdLpyZA7JivY8+nGVqcpgtZytc
      v1rn/AfXqdcjvvx3H8dxsmoxANeTqFjhOJKX/sunkK6kNBwOXNPVaLN4cEVjMkkSlpaW8Lz/
      v70zC47sOu/779yt9w37PgswO2fjcEYkhxJNilosS5ZiS5Et25FcVlyJy3mJyw+pSqrymDyl
      krjKKbuyVJKSYzu2Y8myZMmiSFMiKc6IHC6zL5x9BoMdvfddTh5un4tGowE0gG4MhuL/QeIA
      jb73nnuWb/l//88kHo8H/J9QqHH/3lZCCeuq2k5o7GiqaFSlUglYqu1CPRW3XJXY2CysJerT
      CCpoIU6/hXjtlP/DZ3SkBBfJS2/eouS49MWi7Bvr5Y//5DUiYZN/+fVn6emKMzmZB+kLZc3O
      FNi/p490R5QH9+YRAoa2d3Dg2DBPH9vO9fenOP3Gdfbt70PXBblsme/+xdt4ruTnv3iEC9+5
      wJ2z9zn5teN0j3b4KoNN9JRWqNX2VKjtdKSCOIr4t9K8WNWbUhdTWcfNoA2vRohTeQYVndoM
      eJ7H/Px8kBzc7PzCWiZIIyhOTTGR8O0QQye6s5d9v9bL7Pg8p169BnNFXNvDEILOTIxY1CIU
      8hfe4ECKdDpCNGqxa6wHK2Tw+d84zsV37hJPhrk9n+PMX53msy8c4ODBAfbu7cU0fH+lkC1z
      /84c0pPcuzrJ7L15ounIQt8v1qa3Wjv2tTXC9UzlcDgcFG0tN1eaCieUSqVgha2XoFaL5b5D
      mVn1g6EeTMV811J030ooB3uzIbSN0zZUXkQe2AMdabAsZGeGdC+k93Rz0tA489YtBocypLti
      CAOeP7mLVMKfpGNj3fzOP3uWQqHCqy9fJhoLETJ0HtydZ+feHv7hJ1eZmMoxur2LZ47vwKyR
      SezqTfCpLxzCk5LijVmyk3n2PjdGoie+pJ6kmfmlFrOi5QghFpHhaqHad6kiK1XDbpp+P4um
      42m1PI1G7NGV0Ez5oWKA1k9+dZQpMa5Hmb6wXqgXZ5pmIBO5Hnie59efDPb7PlOugtAEVsTg
      xFM7OHJsGMs0+NZL57hyc4r3b08xNtLJvQfzjAxmyGSivHXqJu++fQcAE4EuNG6+P8UTTw+T
      LVXYv6t3CZVF0wW7DvQiENzVNIozBbY/PrgkobiWOo/aBuqFQmHZwIcq0a01q9Xflkql5hdA
      PYOy2QVQT3Jr9JD1HKPazxcKhUX23s/aApDVej0lO5NKpTCN9fkDQgjsu7PM/+gi5tEd/P23
      L2CFTT79mycwQnqQxHrh6V0MdCfZtb2bv/j227xz9i7/6DOH+NhTo/QPpjAtHdfxEJ7ihEme
      PLKN7r4EmhCcfuUa2dkiJz+5h3tXJtF0jcFdXRTmipz73kXsskOlYBPtiAT3pXzMNY2N9CsW
      mzGDVbBHFdErYa2GC6B+BTcqZFkrlpv8pmk27G6uVm592PVn7RQQCMJVuorfE21jgljF83fI
      v3eLcCyMFTbJzha5+OZt9j+5DSF8BefzZ+5SyFUodFe4c28OIUDXNV4/fYNUMszBp7Zx/dY0
      xQdFoppOT2+CuzemSaUj6LrGu2/cIDdfor8/yalvn0fTBZ/+rY8QiZjoluHnH6qK06rccT1z
      aj3JTnUdReFZdjRVvF3FXGsZoGu92eVMHxVarP+dam5Qa+vXL8BHkce/XqjjPbQKPWA1eJ5H
      4sldGJ1xIrv7+aTQ+Kv/8io/+tZZugfTZHrjZLMlfvTiJYpFm0u3Jrh7f47HDw4x0JfiP/zh
      DwmHTfIVm6JtEw6bfOyJncTykh986z0mZws8+8JePvXFIxQLFbp7EmT6EuiGRiQWIpKw+MhX
      juK5HrGOBSl8JWq2FiiaznoghKBQKPjUn9///d//t42OnlrCGyx011vrhWuLTuonrWpWXH/d
      QqFQI8cul9yL+nntNR5FNJv8Uaek+pv1olQqIQ2B1ZfBExqGpROOWERjIR5cm+KdH16hZySD
      sAxS6QhPnhxF0wXPPbOboYE05bJLT0+CW/dnKDguFcfl3mSWp57Ywfnbk7xx6S7vXrjHJ57f
      Q1dvglDEZMdj/ZQF3Lg2RXdfkkgihBU1QYB0vYDYtxaxMJXwXG822LKsgM+25vO0VbF25ZTU
      Q6nNNfIz6nf/R3XiK6hTVgl71RfwqN+1uk/B+KUJbpy6Sbw7zp7nxti+r4e/+cNXmZvMU8qW
      +fin/U4xhqExWu3Pde3aJD2ZGMePb6ezK8Y3XzzLbLZEPGoxuqeH2JnrkC0wM1egULSxqlEg
      2/H48Q8vMztdIN0Z48CRAQCyVyeZPHWdrqMjWEe3r2lhq5ro9WJJi6RmoF5Aq+Lf9Z3lFftU
      OXsSGcgk1ipHq88+6pMfFpJT9dB1nUQi0VJxADW+btnl4ouXmbk1g6ZrdIyk6dvXy8lfOsj8
      VIFt+3sZH5+nkK8gXElHd5x0Z5S3373DO+/c5sCBAY4eGOKVU9cY6k3z7IlRfvLWDY4dHiaT
      jnJgdx/pZASlivfmWzeZyBXo7IrSP1iVTfQkM+/cYea9eyAEnfsHW9r0Yy1o6qq1ZYutOgHq
      d38ljFuuaYkKfuMLvRohqlWR/iAsgOXQjhxHEMXTBVbYwAQ018Mp+NV83SNpukfSVCouf/4n
      p5mdyBMTGsM7O/nybz/N0SNDWGGDZDLM+Svj3L43x2O7+7h+e5q/e+UiR/YP8Du/dhLTXFAW
      nJ8v8dJLFylWHAjrflMMvzaTzmMjIKDj0CC6ubbJ31LVkGY+pOz0Vi2A2oot9b22bVMqlRbZ
      +soMkkh03ahK7skV6REfBLSjNVMQkzc0Ro4MMnd5AvB7cwkhkJ6klK/gOh6PHRpk/M4cFB32
      HBxASsmD2QLf+fFFOrrjnDg8wu/+k2eIhS0mZ/NsH8qwb7SXStmhUpJE4/7mFo1a9PWluHlz
      mp11rU5jIxliQ2nQBJ5c25xSJa+tsEaaWgC1O28rFkBtux9l2tR296j9nfp/KT0cTwZsyA/q
      5IeFxJfyczbKA1LfqdC9u5uOnZ1UcmV6D/QhpWT8/Wle/+ZZPMfj6Cd3o+cdbo4/IBb12wyF
      LYN4LEQ0YuG6HpfO3+fCxXF27ujid3/jGQwEf/m/T2FXXH7xVx4nmY5gmhpf+9pTTE8XyKSj
      LBEL1gSi4uDqOlok0vSzrCdnsBxWXQAq3QytOZrrQ17qZZcatET1oyQ6wcDJGi2fqrLyB3Eh
      1E56pcO6nud0HId8Pr+ERmFFLY597YQvZGv5meVbFx4w98Bnt15/7z7z+TL5uRKT9+bZ+Vgf
      j+3p49/8i08SjZiMP8jy3rm7FAo25y/e52MfHSMWMpmdLmDbLm+dvsndu7McO7GNffv7OffW
      bR7cz/KJzx4gomtMvT9N52gnkbiF884VOLaHUqm0RP9zJZim2RJq/qoLoLYFZSuIZ/WSflLK
      oAFHPbSqBLrnuYvsflXcrWkaGlujk2MroYSApfSbPNcKfa0F6nRdqAeGwqmr5N+8SuzYGNEn
      diKrn+vb0cH1d+/huR7De3ro2pbhJy9e4uybt9BMjePPjfHOGze4fH6cx5/dScHxy0JLnkvF
      dRlMpzj57BihiMWFS/e5dmWCeDzEyEgn5965y+x0gX0H+vFuzHD7zdtsOzHCY794AOP4voDK
      rqT2m8GmnAD1qrutOAHqH3ClcKauaRi6TsXziy5q/waqvbPwfA6RaJ1j9LChWr+qTWG9XW2C
      kLHnoc1M4Voxsq9ewJ3OkStfIHJoBCx/Cgzu6eETvxnDcz1SPXE0TRCJh8jNl5i8n8Xz4PrV
      KW7enOZgeQQzY3Hn7izdiQTpVISLb93mzRcv0zuUZsfubuLxMAcODZBIhnj2E3uZmsgxureH
      8ZJNNBMh0ZsI7lFB9ZtoZnKvh5PWCKsugNpB30gZmqKr1j9co4fQdZ1IOOJ3IZQSz3MbDkrg
      JHsSHk2Nq4ZQO3ftMyuljrUsAlUy6n33mxhnz+B19RLetotiySa0qx9hGj45Tgjm7s9TmC3S
      u6sroCkc++hOOnsTROMhSkWb0GCU8ZsOr7x7g69+/gnuTMyxa6SL7kyce+4kju1x+9IExak8
      n/n6U8RTYaZvzGBNF3ji2DDRuMX2p3cwdHQIo5oMq0ezz7keRkIjrLgA6s2V9XrdqqhGtVCq
      h7Lr60lRKna93GBIKaGFDtFWgcq2q2DBek08IQSe66JNjCOkRMvNk/niARLPH0ZLhJHVry3N
      l3jlj1/Hqbjs+blR9n/SF76KJkIkM1G++2dv0bezg9ev32W+WOadC/d49vgozz8xyt33p5md
      yLH/+DDRmMWZH1wikYlSKFTwPI9LL15m4sokruOx95O7ERqYscZO/VrkZloVjl/1BFCoF7Fd
      C2zbJpfLLcv7cZ2F3U6dOqpzPawyILKxtumjhvp7rzU/N/JcVihE8eRzyLdP4W4bxUskljTD
      c20Pt1rwXiku9sUqZYdyyUaTMDyQYXquQEc6SndnjGvnxnnx/56hoyfB5//pk4wd7mdwZyfX
      rk7y3//4xxiGxjP7+smMZOjc3rHoWYN35nkgBFKsLRzasqL4FX9ZE63ZqANs2zbZbDboCKmg
      7FRDN/Bk4+NvuQmu/u16C5GhR3URqCq4RvSPjTyTrutEdu8lPzi87KSJdUY58atHmb+fpbs/
      QfFBzu8NLGD77m4+/9UTJNMRPhrSuXZzBz2dcfq6Epy7PksoYhFNhnEdiW5IoskQ09N5StWF
      lBjrYs9nDwRyKaWZEuPv3KHvyBChpIX15hug65SOPrGm96caOG60BrypE0AlqlqBRg+oXrqi
      +npysX2nazqu9JadDIEv8AHIENeeeirvshETb1EG3Xbxyg56LLTI/pZSMnCgl0TU4OKfnMZK
      hNn31Y9gJEJousAydM68dIXHn9vF4b39CCE4e/oWL3/nHPuPDrP78AB//n9O09Ob4IVP7+fw
      sWHG788TsnRy16a5OFlg78+NommCO2/c4Po/XEV6kh3P78LdOQbVtlzaGmTqDcMIBBOklMzP
      z69rfJZdALX2v7LFN4pGCZ36XUmFNoOO8GpXbGJye1IiHtFFMDc3t6QjTm3CcCOQUiIdj1t/
      /Tb5mzMMf/4Q8dHuJZ8RhoZm6mimTu6924S7E0TGennt22cZvzkLHjz7y4f88GzIwAqbdPcn
      mZktcPXyA6Ymc5z82BjJVJgv/doTFOdKfO8PfoxuaIyeGMGKmfQ/PoTnSXoPDuCUHOjs9qN5
      rrMmuXc14ZV+1XojQssugPr2SK3wuBuVOzZqaL3k+m4TnT6EQEoP15OPpCmkqpRkG3waz/Nw
      bYfieJbyTJ7KTLXCTkpk2UGE/Y0pNphm39eexJsvMv6NH6PHQgz/8xfI9CaYuTlL+doUk1cm
      6RzrZNdj/Qzv7CQcNSkVbZ77xF46O+PE4qHqV0siyTAf+ceH0XSNctmh4rjEu2Ps/sw+srfn
      OPu359j/pSOIkIYQvvxLM6jNbWzUF1jxBFBolfnTiPvfqOqsHr5/IH0nKfi8hpQLtcZS+t3Y
      VZJMCA29DZyadqHZ+Pd6ISyd7V98nNJUnuSuboSEmb8/S/7cHTpeeIzIgUEQEOmOQ2eMzNO7
      IGJx4/IElqGzc6yL3NUp7p8bJ9oV4+pPb9MxmKJrIIlXcvi553cHjrVTdrl+6hZWxGT4yAC2
      7fLt//YGhqnx8189geZ5eLkS2z82ihE2cDwnMH+aeV/NCp+puWDoy2fSl10AtceRurGNnAL1
      9Gd1g+oEWOnlCyHQhUCTQjUVrN6PhhtkibWAT6/68kr56NQMtPM+VZhZCxkkdnYhKy7zZ+9S
      ujONPZWj8mCe6IEhZn96Ha9s0/HUGJmPH2Dyzhyv/o83KOYq9A4kGX16O0OPD3Hr7H3O/uAy
      ye4YPVGT8kyBA7/yOKntGQBmbs1y/u8vYYRMOkbSxLtiHH12FM3QMC2diVO3ufP984x+5Tge
      vqlrNHlqK+pMM59T/e486aGLxuZVwwVQnwBToqrNrDyV8KpdLJZlNeR5rNVxFWKxEqeK/Ehk
      oNGp8gjaBhpRPwzk83ny+TyGYRCNRjfMj68lEtq2TXm6wLt/8DKxviTbP7WX/PVJOj5xEHt8
      jsieftxChcmXLuCWbBL7BjAyUTxX4rn+98S6Yuz7zD6EJpg9d5eE8OgdSuHcncO1XV/kFrCz
      ZbJXJkikI6S3dRBOhsnez9KRiZIaTFKZymPGLAae30OkL6EO9KpE4uob1mrNWNQzuzVzcKWP
      NxzlevJVsxNU0zSSyWTgNFcqFTRNW5bk1Apas78oGodHH0XUt6JdDxazaP0dUw8ZRLrjRHoS
      hIcy9A6kEYaGNZgJ/q730wfxKg5G2q/X7RxI8sSn9vLgxjS7jg0HkSNjfIYdWpnZ+3PM52yG
      jwyR2em3R504c4f7r1wlM5jiwKf3YFg6733zLK7tcvK3n+Lu985RmSkw+rWn0MKmf4LTXMMP
      z/OWKMI1/Jz0FpnHK+mpNrxqo/aby3WHqf2c53lks9lAUVrZ/MtNyPrM74egJbs/LK6lBtCj
      Jvu+fhKhCxC+2JZ0pf9vwHMl2XCYzp1+nka6Hpou2Ht8mD1PDCOqFr7neMSf2YO+s5er37uC
      U3aZuDOP0H0TOT6UJjGcJj3WjRH2N9I9n9yD9Dw0S6frxHacfAUttPCMAlYNXChRtGY2B01o
      ePjhY02s7Ac2LIqv7dAYfFDXg+On1nmFhQIFpeWpGl8308z5YSitbWXUi4Ot5zRT/ppdLuEW
      5nE9CcJXYbZvTyOLNvP3clz4xk+xohaxviTvv3uP7/2v0xSyZToNuPmnpzATEcI9CebfvsXd
      b54h3J3k2rvjnPnuRSJ9KSLxME7ZYfTpbaSqPYFDmQjdhwZJ7+yikqtgzxbQpSS9oxOJxMpE
      CfdW5RnB53EJiEaiK0qjVyqVpnZ/9fy6pq86+WGZE6BRPFYIQTQaJZvNLlqFymZda+dy5VO0
      o/zvUYYKFqx3XNTmVJqbQnvrO5gTN9DTfZQeewFXizH7nTNoUYvKjiEKD3Lkx7N0AR19Sfp3
      dDC0u5vyVI7SgyzliSyCfiZfu0rp7ixTb1wjb0YozZcpzpc48oUDvpZoePF80Syd6YsPuPw3
      Z9n1mf2kd3QuuU8hQQqCar+V5k6zju96sGQB1FOga6H0FNXEVSS3tTSaVpVfQoi26fg/qqh1
      Atfrx0gpmZubI3TlNOaVUwgk2tw45azF+8VReo6OEu1NYA13Mj5b4s0LE8QP9NPRn+Czv/2U
      /x2eJDHag9XtO6npQ8NMFStkDg3TPZChd1cXXdsyCF1g6Dqe7TF7c4bUYAq92mc4nImS2tZB
      pCeBMDQmXr9ObDhNZCCF8CRz33mT0Fg/+ljPiqaykkBplxjxEuN7JftTnQKxWIxEIhE0zG72
      ZSmZw3K57GvUfLj7L4I6FVeT9F4JQfFLKRfY7QLI3p9n/L37zEkdfaADNMF8yWHy7hyzE/ng
      +j7DFsL9KdD8Hbrj5Chjv/M88b19hBIWg/t7MWrEb2fen+LMN37K5KWJ4GdGKcfYx7YRzUSx
      50rcfekiU2/d9n+pCSL7hzF7/eYZVlX6ZbnnaVfPBwDx4MEDWbvj67q+hLBWi0b2/2oLQMqV
      BUw/xAKi0ei6aNBSSoq5HO7lS8hwGBGWRF7/c0RhFhmKUTjyOS7fjvDTb51n25EBTnzpEHbZ
      ZfZBjs7BJLWXmrs+w7XvX2TH87tIj1bNFwnulTsQi3D5zDiTVybZ95n9dI514hQdbp26iaNr
      DB3sJ5IMUbp8k+m372EXJMNfOkZ5roSVCqNHFpKhqsdaIt5YGBkgm822VQJ/yXavYvirRW7W
      gg8nf3PQdX3d8oeO4+C9eRrjxR+AYWB/6csUT34F/f3zuEOjyHCGTuGQ7ImR7vOrsQxLo3s4
      tbChZQsI02Duxgyz16eZvT5NZqzLjyZNzpL70x8iM0lm6CA3niM7nqVrVxdm1EQkw5z+s7eZ
      vDPH018+QnhshNCEjXN9CoQgUr2mgtpIle/Y6Jk3oxvRkgXQSrPkw51/bdhIOFhKCWqcXRcc
      B27PIV45g7Z9HjE9T+rgYR7rMoji76h2tsyDt+/Sc3gA0xQ4f/kDRCLG8C98jORQiuRIBrtg
      M3Nrls7hFNbBnWg9GXb39FCYKqAlw7z7o/fZebCf7pEMwwf62HZoIDCjOp8aJXZwiHs3Zukb
      7UA3FkvhAFhWaFkfslUctJXQ0OBvxUWV8/Lh5G8eG9EDMk0T+4kTuLqOjETxBgbRbAficWRH
      B1KYEIsivDk8299V52/NcvOly0S6YnTt6UbftwMRjSBCBulRP7F19m/Ocev0LQ7/8iGGvnCS
      m+/c4+L3L/H45w7w2nfPc/fqFOWSwxMv7OKjv/74YvNYE7z5/UtcPn2bZ754mNHHfVlEWeV1
      GcaC1lMjlsBmNGRs2wIAP59g23bLqndaic2sIguHw1Qqlbb3MIvlPDDKAAASm0lEQVRmMpSe
      fsa/lusit23D+8qvI00LWbbJXRgndXwn0bEepJR07Orm4BfSpNy/Qswcg48c900TAAkX3rxN
      3vXoGusiNeibSpqhoZs6Zsigf0cn5YJN92AKp2ijGTqaISjcmcOIhzBTYYb29JKfLdE1lFpy
      z0ogoVHNQytrUFYct3onGCAejzctT7EapJRks9lN76m1GlzPV17QdaNpGm4t1AtrZlJnMpmg
      LHQlbHTcPc+jPDeLe/8OXjSGk1hoUVq4OM7tb7yGmYow8vVn0ZNhNDzMd/89IncdaaVwDv9r
      XMNPaLmO5P/90auEYyE+95snFj+n9Hd3z5M4FRfhuJz9n6fo2NPD8LNj3P7uOWLDGTKH/B1f
      CIFmF9Gnr+N0bMfWLISAeDyBWWXBNjoB5ubm2rppwBrEcdcCxQVSBe2tkrFrFWopAq7rwDoW
      geI4SUATIpDbVo5b/Qmjmo6rY121oLVtO/jbjfQBk1JSKRXRfvR3hC6fxYsnKXzil3BSfi2u
      mY4S6klidcTQqo3vkEA2Ca6GTHQi9XBwz4ap8fEvHUE3NJ/oVrNBexWX2auTZHZ3Y4Z0PCDW
      kyCcjiJ0weCnfNJc7b3pDy4Sevev4cgXqXTtxjAszGpXx0ZQbIJ2oy0LQLVY3YpQNFk1MbU1
      FGLUwnEc5ufnkQJSydSS6I2SNqlVeKg95pXim+py2ApTzCsWsO7dQtgVtLlp9JnJhQXQm2Do
      C4cp/u1PcM5ewzq2G+3OXfSfVnCe/GWcA8/iCX9h5G7MkLs5Te/JndjZMu/80Y8ZeGoHXQf6
      8AplKrZk6vx9EiMZzLiFFtLZ9cXDgfkkjKXOvNu9i/Jjn8PObEMIQaQBPb4WzdIeNoqGC6BV
      bMStiNo8xlq6k9fCk7KqrCBxXY9cPoeh6+i6gWHoPrGrKilZm1iMRCIB0bAtArihMM7oPsT5
      M3ipDpye/sUfyBVx703hvJ/AOrYbr6cX57mP427fGUx+8CewFjKCaI4eMhC6RuX6BLk3LtP5
      5ZOM/uJjaEbzomkVPYw2eAQQREOhFROuG9X/Xwsa+gCGYZBIJNb9giqVyqZ0UV8PVAQCaIos
      1ehvFzYIQaM/D2oSqjqouq5j6DqapvungusQDTevg9nsvWWzWTzbRivm8MwQXm1nedvFnclD
      voDR30k5V2Hy1St0PrmTUE+i7suq/1NDWBNCgOvhZUtomQUGgHq++h27lukbiUTQqnOs9rRd
      ifi2WfOn4TIM2sesk5ZrmibJZHLdlfrthF9dtj5bW/kOtWIBy218qm7VVjuZ8Ms4AWRV9tAy
      TISmoWm+GO5G5B09z4NCHn38Hm5P3+LJ70myL58j99b7JJ/ZR3xbL3PvXWPu7F3ivXHCmSjS
      1BFIhFdBahaypsZCaP5E1i0TIxELCtHVKabCmLWTfr1yjrC59RzLznCl07ge1EpxfBDg7/wS
      WZ386rivr3yrnQRLv4SgSAOgUi5TqcmRJBIJIuHmJcLr4ZRLGK+/gnH+PZxDj1N+8qNIdR8S
      3FwJr1TBK5RwsmVm37pJPGOh/fAnFG/cJPrl59EevIr+4Ee4/R/H6TgWKFOYphkkqxo9mxAi
      6GG2Xiin16iJCm2GKb3sDK9UKgHZ7WcZymmuT9Z4ntdQ0qV2R1wLxEbFfYUGoTCYFjJUNxl1
      QeqFQ0T3DxEyHMTUfUae6kZE4zivzKMloiAdtLlziNw1tPlBrN4ThMLRRTt6O1BbFmvbdluv
      1QgNfQCFRCKx7uYMUkpmZmY2cm9bAuoFqQJraDz5gSXH/1qQyXRgbqASzHVd8jPTMDuNTGVw
      G/QTFq6L/q3vok/dJxLPUdlzlOL+p8HQkZpAL9xEm3kH0X2ccNeu4O/WQndfK1S0TI1ZuVwm
      FAoxOzv7cE8A8M2gVnQneZRRH9pcLT7dSNfHL/jwO6orM8j3M6uf07QV61abgeM4eIVxOPff
      IJxGO/JbeMZik0rqOt7JjyALecr5cdyeATBFYCq50RFkfPuiBn0qt9Euk1aZy47jBIVAm8EB
      UlhxAbSawqAkD9cafXlYUJPZduyGpaDNIhqLEjKthWJ1ZLAYPM+Xf9/oeLiuCzdehsnz/g+G
      T6KZaSjOIvsPIjXDl5PJJJDdnZS8AXjrz+BOGHHw82imT8GuZwPXSs00a5rU1iPXiyovx3a1
      bTtojK4iS5tBoTHavdKCwajR+9T0rVsE7ydz5KLdfjUt+lrnt5GjmMtl8SIxwtWXr2t6y/sZ
      mKaJ3XsIeevHYMXASiJf/k+Qm0A893vIwaPo2Ukir/0l9ujjVLY9hsxNQCiOZZlEE8lF5kjt
      s9WOTb1zqn6mSI+rNVJfrj+0pmkL+kWaRjgcJp/Pt2JoVoSxOKS3+OjeqPmjukFm89mFWPIW
      RTDhayI1a9n1V1oA0vM3gHYkvxQMwyA0cpxiYgg0E5CQ6PM1VXWBXhoHI4IXDeE9+D5Cm4SQ
      C8OPYYZ9GRQpZcN7VP92XZdisYjneX5sX9OYn58PTJhmoCoBlfROrQ6qEIJ8Pk82myUWixGP
      x9ueDwicYDUBahdBZ2fnuj3yWm2aXD4XqD+odkZbbTGo+3Vcd1G4shlOSu2LrF8AQgji8USw
      +7cTUkomJif8XRmBKcuISg49dxGtcAd7568iZq8gzv1XvLIHs7dh4AThj/4eoejyiU9ll+cK
      eVzH2VC+QkqJruvE43FgIRuv6PO17OFIJNK0FMp6EfgA9TuduUKdZjOoHUwleWHbDu4KHV8e
      JtQ9GbqO6y00BGnWRKwPfap/x+NxIhuMkTcLtZMWCgXfqS7nEde/iXQLOPu/iidBpEYxjv8r
      xNxt5I1/QIycRLeWvz8pJeVKhVw+52sFtSBEqTaV+u9SCViFzeADLSuLkkgkGv1qzahNl+e9
      PN4WrA2ohbLRBQLHdZDIxe1U6rDczq92OctsDa28WUQjUX8SzT+A7/87pGFD9zBShKrvwiSS
      HIKOQZyhIxhGCH2FNqyO65LNZZGe1xLVbeVDFIvFRYqBlUrloTCGgyWo5FDWG8deDbZtbxrB
      aaNQJo1hGBja8pOjVs+/diFomkY6nSEcWpnx2A6YpkkqmUKPpmDkCaQbxjt7Gt7/CYlEglgs
      VrX1dcKROMYqek6u5yJYO29qJQghcF2XXC4XnLTLOcftxqK30y6Woud5j4QCXH0gQKsqTq9m
      DtaPVzyeaBjXL5fLzGezi5Jq7YCu68Qy3VhPfxVx+AvQPYbo2LYoy9qsaRcyLUKh1tC166Hu
      JZfLBTSIzabQNMwEh0IhYrFYyy6Sy+W21O6vwn2IhbZMUsqgEYdpNO5j4LgunnQXifGqTUN9
      LhqLkogtVUAoVypks/N+BMQ0SSaSGG1+2a7rBk6lEjVrdiIHEvOeJJvP4bneuuomalHvJ4XD
      4UBkTUlqqiKhzULDba1VrXlga5k+QXLGcxfF+oFgV27EyVGT3DQMTN0Mvqv+u3VdJ1oNKdbC
      dV2KpSKRqP87x7bJ53Ntz3ZqmhZsZo0Ej1eC63mUyxVsx/FJgBu8l0Yh5VpxNPUeNnPyQ50T
      rOywjR5DAX+mauc9bCzl8dcIyLoOmi9SWXWAV7bZPXUaVG1jXfPHStd1UqnUElPJ8zxm52Zx
      HAfTMIjFYpRKJSyrdZvMcliP2SKlpGLbuJ6LaRpVKUtvw6fVVi2SWrQAotHohh0R5eG3WwWh
      2XupnfiNEjymYWCaJqViEdHA0VOLWcWqPc/1TwtPIgU4noshBMlYbInpBAtcGvAFwlKpFJl0
      Zt1c+c2ClGA7DuVyGU3b+H2q8dtqz2wIIYKJ36qbq33pDwOrTfxahENhopEInudRqZTBlQhN
      VCkBOrKGwmG7To2pJEDzvYFQKLQsl98wDFLJFPPZLFbIwjQ2ll9pN4QQWKaJaRjkCwW/6H/D
      BtDCd281GLBUk34jEEJsuiNTDzX5lx9wUVW1Xgj9ppMpSuUS+Xw+CM25rhPs1I7r+AoSVHMb
      lkk8GqNSqRCPL59FVcmpjKoV3oKToB7+8/p+i2BrTtxWwVC1pBvh/tdCyvYpetVXXy33GbXz
      L3fkhkKhJdQEIQSRcATTMMkX8ot6F6gTRX1e0zQ60x3+5K5K+60GowE/f6uhYlfwpMQyLZwq
      A1b5OB9UGLA4lLdeKFu5XC63LaO31gXQyM42TJNoNBKIdYVCIaLRaPD8hmGQTCSZk/NUKuWg
      GMYfI1+8NlQl+dXWwj7qUGFeJBSdIqXS5siSPGxoQMDs2wiklIH+f7ugJtpqE87n2i8Nu0kp
      CYdCOLYTcM+X45xL6WFVTwnVfxggFo0RCUcWJcw+CAvAkxLLMAMRM9d10bcgabHVMEzTXLck
      dy3qeeLtQEOqcR2F24/ve/iSJUujPqViKfhvTdOIx+MNF38k7Ku+hUIhctkseAIESyIiW8Gh
      detKNIUQPg26Wm3VzLvVhKBQqSCET0prp7/iNzzHV8qguU2tXTDW2ttrOXhVqY/NRHBsI4Nu
      4ALh95xloc4Blg6wpmkkEoll+6EplQPXdUmlUszPz+N6HqVSiVg0tiHZj1ajWCxSLBYWTkgp
      Kb78Mtb2HaQPHlwkYdIIaozCoRDFUgnXddpq+9fT7h8mPb5l29dyHSTbBWWbK6qm4zqBs6pr
      epXM5uvu1P6NstsTiURTsi++qJWB0PxgYKFQoFgqtrW4ZS1wPY9y1VcJKthcFzebwyuXfIe+
      UlmJ0BoI9zqOE9Qptxtq7FRm/mGhJaEJ5fw246S2CorKUFvRpuRLoMpu1TQ0KQKOD/iJq3Q8
      vibNI03TSKdS/k5bKjWkSwT3VfUr2kUsrL9WPp/DrQs6SE0j+tlfQHqSUqnkV1+t8B1K96dS
      qfiCaG2OWNWbyw8zR7yhJ1UhT8XlXs7caAcEPm9f7R5VkzK4vqpaUvx+FcYUQltXuFfX9MAB
      Xun5hBBBZVMkElkiitsqSOlP7uUayNVKt6wUlXNdl3w+H5DlQqEQlUqlrexdgQhKTx/2Kbrh
      pV4oFBY5YJuV7g7sb+G/xNoryro9RdM0NLRgt1vv/SmnciVIKYPGIPl8HinlosKPVsG2bXL5
      5nhWK9n+Sge2XC6TzWY3990pieGHyBPa8AJQJXiwijRgG1AbxlR6lSqLW69lo+i27YbKhMdi
      MYrFYlvGwvWqVVqrTBx17eVOPNu2q8Q8a5Ep2W4IIbZMYnBDd6HKHZuNz7cakgWZjnA4TDwW
      DxxdT3pUyr5pFo/HF5lr7YYQAsuyWkorV5BS+hGpJkpL/fsINTTb1GloGAaFQmHLUNY3Gxv2
      AWzbfnghLKH5rXqqceXazKyGhh7x5TqKxWJg424G2jUeUkryhfyy4WZd0/CmphHpFJ6mEakS
      /Rr5ILW7/1alKm8G1u2dqUFbr4J0q6Cc3EqlQrFYXBKJUtENJa/xMOpOW4XVnFM5n2X8P/5n
      5K3bdGY6SKwQ7TJNk3g8TqVSeajExYcNkcvl5HrKHx3XoVgqEbIsCvnCQ+f+KyhuT+0uXC6X
      A5WxVjYA3Ew4rsPMzMyyu3UoFMIyTEr37hPt78NawfGuLUMsl8s/0wtgXdu3L3aVp1gskK/2
      2NI0P/v6sMNaaqePxWLB0a+O+UKh4DemeAQXgG03FozVdYNYLEqoWmEW3rkDaGyGqTH4sHfz
      Ata1AMrlMqVSsepwemjV6IumaevuvtJK2LYdULxVMkpRGxQJ7mEv1LUiZFkUdN1P6kk/qhWN
      xog2GWL1PG8h2/shAqx5AbiuSy6fW6AcU8O3aVHlUCvgui7ZbDYgu6nClEdV7l3TNFKplK+u
      57mEq3UIzUx+FRkLhUIfLoA6rGkBBFEIZyHys8Dm29zOHitBxfzVIlCkt2YSWVsZhm6sKX6u
      Qr9Kb0fZ/B8uggWsacY6rhNIWfhmxMKk32iDh1YiHA4Tj8cRQuB53pbsVN9uKKpEpVIJNquH
      JT+4ldH0rFU7qm4YaFq1vpWqpPZG+1u1GIWCH5Wq7XTysxTtUPa+4iP5Bf+VtuvtP2p+FTRp
      AkkpKRQLwQDWKoSpcNpWe/hCoUA4HF7kCG+VUG07ochtjuME5p7neW2f/Kof8GY0tWglmloA
      djWbutwkd1wXo42N1NYLX9TJDWQet9r9tRJSVjX8cwuKc6qhRX2bonYgEok8knSKpmwXXdcJ
      hxsLpPo/27qpdFXfuhn9ph4mKpUK2exSgpxt220/+VSA4VE0MZtbAJpGPBYnEU8sqvqqrf5y
      XAd3lV5aDwOxWMyXOV9BA/+DgIdZnhkOhzelmUU70LT3qpiftR3DDd1Ar4bmhNDwHmJpWyNY
      lrUh/v+jhFZouq4Hyr96VE9YYy12W6VSQXoLHVMCASpUNdbWczQfhb4ErcBq3RnbBaUF+6gu
      gP8P9kuEIPlxHkkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      R8uDnVrDsAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
      0QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 6' width='130'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
